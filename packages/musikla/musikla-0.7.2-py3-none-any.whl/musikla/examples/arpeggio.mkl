:accord = I22 S3/4 T120 L/4;
setvoice( $accord );

cc( 64; 0 );

$e1 = ( c5/2 r/2 | r [cde][cde] );
$e2 = ( c5/2 r/2 );
$pat = $e1;

# HOW THIS GRID WORKS (grid cell length = 3, or 1500ms)
# g1: When the user plays an arpeggio, it is pushed to the left, meaning, to the begining of the beat.
# That chord then starts playing "in the middle of the action"
# However, if we play that arpeggio when there are less than 500ms left in the grid, they are not touched
# 
# g2: Instead of starting to play right away, it is pushed to the right: meaning, it will play when the next
# grid alignment starts
$g = $keyboard\Grid::compose(
    keyboard\Grid( 3, direction = 'left', forgiveness_left = 500 ), #g1
    keyboard\Grid( 3, direction = 'right' ) #g2
);

# A much simpler equivalent
$g = keyboard\Grid( $e1::len()::numerator, range_left = 500 );

$keyboard = @keyboard {
    a: [Cm] * $pat;
    s: [Fm] * $pat;
    d: [Gm] * $pat;

    r: $g::reset();

    8: { $pat = $e1 };
    9: { $pat = $e2 };
}::with_grid( $g, mode = "global" );

print( $g::length_duration ); 

$g::cli_metronome();
