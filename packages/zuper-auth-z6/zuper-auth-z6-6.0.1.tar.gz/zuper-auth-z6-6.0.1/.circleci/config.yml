version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.8:
          context: pip-staging
      - test-3.7:
          context: pip-staging
jobs:
  test-3.7: &test-template
    environment:
      COLUMNS: 160
      CODECOV_TOKEN: 168901ae-1b44-4593-a600-606a29c3b6c2
      # default is /usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      PATH: /root/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    docker:
      - image: python:3.7
    working_directory: ~/repo
    steps:
      - checkout
#      - run:
#          name: Install Git LFS
#          command: |
#            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
#            apt-get update
#            apt-get install -y git-lfs openssh-client
#            git lfs install
#            mkdir -p ~/.ssh
#            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
#            ssh git@github.com git-lfs-authenticate "${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" download
#            git lfs pull
      - run:
          name: Install deps
          command: |
            echo PATH=$PATH
            pip install -q --user --upgrade -r requirements.txt

            wget https://dist.ipfs.io/go-ipfs/v0.4.18/go-ipfs_v0.4.18_linux-amd64.tar.gz
            tar xvzf go-ipfs_v0.4.18_linux-amd64.tar.gz
            cp go-ipfs/ipfs /usr/local/bin
            ipfs init
      - run:
          name: Build stats
          command: |
            echo TERM = $TERM
            mkdir -p  build-stats
            pipdeptree | tee  build-stats/pipdeptree.txt
            pip list | tee  build-stats/pip-list.txt
            pip freeze | tee  build-stats/pip-freeze.txt
            env | tee  build-stats/env.txt
      - store_artifacts:
          path: build-stats
          destination:  build-stats
      - run:
          name: List deps
          command: |
            mkdir -p artifacts
            pip freeze | tee artifacts/pip-freeze.txt

      - run:
          name: setup.py develop
          command: |
            python setup.py develop --prefix ~/.local --no-deps

      - run:
          name: Run tests
          command: |
            make
#
#      - run:
#          name: Notebooks
#          command: |
#            make -C notebooks || true

#      - run:
#          name: Example draw maps
#          command: |
#            make tests-maps-coverage

#      - run:
#          name: Example LFV download
#          command: |
#            rm test-data/LFV.json
#            wget https://github.com/duckietown/duckietown-world/raw/master18/test-data/LFV.json -O test-data/LFV.json

#      - run:
#          name: Example LFV
#          command: |
#            make tests-LFV-coverage


#      - run:
#          name: Coverage analysis
#          when: always
#          command: |
#            make coverage-report
#
#      - run:
#          name: Coveralls submission
#          when: always
#          command: |
#            make coverage-coveralls
#
#      - run:
#          name: Create JUnit output
#          when: always
#          command: |
#            make junit
#
#      - test-results-store:
#          path: out-comptests/junit
#
#      - store_artifacts:
#          path: out-comptests/duckietown_world_tests
#          destination: duckietown_world_tests
#
#      - store_artifacts:
#          path: artifacts
#          destination: artifacts

      - store_artifacts:
          path: cover
          destination: coverage

      - store_artifacts:
          path: notebooks
          destination: notebooks

      - run:
          name: CodeCov
          when: always
          command: |
            bash <(curl -s https://codecov.io/bash)


  test-3.8:
    <<: *test-template
    docker:
    - image: python:3.8
