{"cls": {"lgr": {"C": [0.001, 0.01, 0.1, 1, 10, 100, 1000]},"rgcv":{"fit_intercept":["False","True"]},"hgboost":{"max_depth":[3, 5, 7, 9],"learning_rate":[0.1, 0.2,0.3,0.4]} ,"lsvc": {"C": [0.1, 1, 10]},"sgd": {"penalty":["l1","l2","elasticnet"]},"svm": {"kernel": ["linear", "poly", "rbf", "sigmoid"], "C": [0.1, 1, 10]}, "mlp": {"hidden_layer_sizes": [10, 50, 100], "activation": ["identity", "relu", "tanh", "logistic"], "learning_rate": ["constant", "invscaling", "adaptive"], "solver": ["lbfgs", "sgd", "adam"]}, "ada": {"n_estimators": [50, 100, 150], "learning_rate": [0.1, 1, 10, 100]}, "rf": {"n_estimators": [5, 50, 250], "max_depth": [2, 4, 8, 16, 32]}, "gb": {"n_estimators": [50, 100, 150, 200, 250, 300], "max_depth": [1, 3, 5, 7, 9], "learning_rate": [0.01, 0.1, 0.2, 0.3, 0.4]}, "xgb": {"n_estimators": [50, 100, 150, 200, 250, 300], "max_depth": [3, 5, 7, 9], "learning_rate": [0.01, 0.1, 0.2, 0.3, 0.4], "verbosity": [0]}}, "reg": {"lr": {"normalize": ["True", "False"]}, "knn": {"algorithm": ["auto", "ball_tree", "kd_tree", "brute"], "n_neighbors": [5, 10, 15, 20, 25], "weights": ["uniform", "distance"]}, "svm": {"kernel": ["linear", "poly", "rbf", "sigmoid"], "C": [0.1, 1, 10]}, "mlp": {"hidden_layer_sizes": [10, 50, 100], "activation": ["identity", "relu", "tanh", "logistic"], "learning_rate": ["constant", "invscaling", "adaptive"], "solver": ["lbfgs", "adam"]}, "rf": {"n_estimators": [5, 50, 250], "max_depth": [2, 4, 8, 16, 32]}, "gb": {"n_estimators": [50, 100, 150, 200, 250, 300], "max_depth": [3, 5, 7, 9], "learning_rate": [0.01, 0.1, 0.2, 0.3, 0.4]}, "tree": {"splitter": ["best", "random"], "max_depth": [1, 3, 5, 7, 9], "min_samples_leaf": [1, 3, 5]}, "ada": {"n_estimators": [50, 100, 150, 200, 250, 300], "loss": ["linear", "square", "exponential"], "learning_rate": [0.01, 0.1, 0.2, 0.3, 0.4]}, "xgb": {"n_estimators": [50, 100, 150, 200, 250, 300], "max_depth": [3, 5, 7, 9], "learning_rate": [0.01, 0.1, 0.2, 0.3, 0.4], "verbosity": [0]}, "sgd": {"shuffle": ["True", "False"], "penalty": ["l2", "l1", "elasticnet"], "learning_rate": ["constant", "optimal", "invscaling"]}, "cvlasso": {"fit_intercept": ["True", "False"]}, "rgcv": {"fit_intercept": ["True", "False"]}, "huber": {"fit_intercept": ["True", "False"]}, "hgboost": {"max_depth": [3, 5, 7, 9], "learning_rate": [0.1, 0.2, 0.3, 0.4]}}}