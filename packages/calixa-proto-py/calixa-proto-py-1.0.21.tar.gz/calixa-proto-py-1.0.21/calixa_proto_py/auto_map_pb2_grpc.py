# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import auto_map_pb2 as auto__map__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class AutoMapperServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Hydrate = channel.unary_unary(
                '/calixa.domain.id.AutoMapperService/Hydrate',
                request_serializer=auto__map__pb2.HydrateRequest.SerializeToString,
                response_deserializer=auto__map__pb2.HydrateResponse.FromString,
                )
        self.HydrateAndIndex = channel.unary_unary(
                '/calixa.domain.id.AutoMapperService/HydrateAndIndex',
                request_serializer=auto__map__pb2.HydrateAndIndexRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class AutoMapperServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Hydrate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HydrateAndIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AutoMapperServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Hydrate': grpc.unary_unary_rpc_method_handler(
                    servicer.Hydrate,
                    request_deserializer=auto__map__pb2.HydrateRequest.FromString,
                    response_serializer=auto__map__pb2.HydrateResponse.SerializeToString,
            ),
            'HydrateAndIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.HydrateAndIndex,
                    request_deserializer=auto__map__pb2.HydrateAndIndexRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'calixa.domain.id.AutoMapperService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AutoMapperService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Hydrate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.id.AutoMapperService/Hydrate',
            auto__map__pb2.HydrateRequest.SerializeToString,
            auto__map__pb2.HydrateResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HydrateAndIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.id.AutoMapperService/HydrateAndIndex',
            auto__map__pb2.HydrateAndIndexRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
