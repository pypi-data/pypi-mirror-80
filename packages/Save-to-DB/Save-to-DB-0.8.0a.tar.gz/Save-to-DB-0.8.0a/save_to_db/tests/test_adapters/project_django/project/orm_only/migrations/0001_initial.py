# Generated by Django 2.1.4 on 2019-05-10 12:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ModelAutoReverseFourA",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_auto_reverse_four_a",
            },
        ),
        migrations.CreateModel(
            name="ModelAutoReverseFourB",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_auto_reverse_four_b",
            },
        ),
        migrations.CreateModel(
            name="ModelAutoReverseOne",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "four_a_x_x",
                    models.ManyToManyField(to="orm_only.ModelAutoReverseFourA"),
                ),
                (
                    "four_b_x_x",
                    models.ManyToManyField(
                        related_name="_modelautoreverseone_four_b_x_x_+",
                        to="orm_only.ModelAutoReverseFourB",
                    ),
                ),
            ],
            options={
                "db_table": "model_auto_reverse_one",
            },
        ),
        migrations.CreateModel(
            name="ModelAutoReverseThreeA",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_auto_reverse_thee_a",
            },
        ),
        migrations.CreateModel(
            name="ModelAutoReverseThreeB",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_auto_reverse_thee_b",
            },
        ),
        migrations.CreateModel(
            name="ModelAutoReverseTwoA",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_auto_reverse_two_a",
            },
        ),
        migrations.CreateModel(
            name="ModelAutoReverseTwoB",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_auto_reverse_two_b",
            },
        ),
        migrations.CreateModel(
            name="ModelConstraintsFive",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_constraints_five",
            },
        ),
        migrations.CreateModel(
            name="ModelConstraintsFour",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_constraints_four",
            },
        ),
        migrations.CreateModel(
            name="ModelConstraintsOne",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                ("f_text", models.TextField()),
                ("f_integer", models.IntegerField(null=True, unique=True)),
                ("f_string", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "db_table": "model_constraints_one",
            },
        ),
        migrations.CreateModel(
            name="ModelConstraintsSelf",
            fields=[
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "code",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                (
                    "first_parent_1_1",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="first_child_1_1",
                        to="orm_only.ModelConstraintsSelf",
                    ),
                ),
                (
                    "parent_x_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_1_x",
                        to="orm_only.ModelConstraintsSelf",
                    ),
                ),
                (
                    "parent_x_x",
                    models.ManyToManyField(
                        related_name="child_x_x", to="orm_only.ModelConstraintsSelf"
                    ),
                ),
                (
                    "second_parent_1_1",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="second_child_1_1",
                        to="orm_only.ModelConstraintsSelf",
                    ),
                ),
            ],
            options={
                "db_table": "model_constraints_self",
            },
        ),
        migrations.CreateModel(
            name="ModelConstraintsSix",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "five_1_1",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="six_1_1",
                        to="orm_only.ModelConstraintsFive",
                    ),
                ),
            ],
            options={
                "db_table": "model_constraints_six",
            },
        ),
        migrations.CreateModel(
            name="ModelConstraintsThree",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "four_x_1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="three_1_x",
                        to="orm_only.ModelConstraintsFour",
                    ),
                ),
                (
                    "one_x_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="three_1_x",
                        to="orm_only.ModelConstraintsOne",
                    ),
                ),
            ],
            options={
                "db_table": "model_constraints_three",
            },
        ),
        migrations.CreateModel(
            name="ModelConstraintsTwo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "four_x_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_x",
                        to="orm_only.ModelConstraintsFour",
                    ),
                ),
                (
                    "one_x_1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_x",
                        to="orm_only.ModelConstraintsOne",
                    ),
                ),
            ],
            options={
                "db_table": "model_constraints_two",
            },
        ),
        migrations.CreateModel(
            name="ModelFieldTypes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("binary_1", models.BinaryField(db_column="new_binary_1")),
                (
                    "string_1",
                    models.CharField(db_column="new_string_1", max_length=255),
                ),
                ("text_1", models.TextField(db_column="new_text_1")),
                ("integer_1", models.IntegerField(db_column="new_integer_1")),
                ("integer_2", models.BigIntegerField(db_column="new_integer_2")),
                ("integer_3", models.PositiveIntegerField(db_column="new_integer_3")),
                (
                    "integer_4",
                    models.PositiveSmallIntegerField(db_column="new_integer_4"),
                ),
                ("integer_5", models.SmallIntegerField(db_column="new_integer_5")),
                ("boolean_1", models.BooleanField(db_column="new_boolean_1")),
                ("boolean_2", models.NullBooleanField(db_column="new_boolean_2")),
                ("float_1", models.FloatField(db_column="new_float_1")),
                (
                    "decimal_1",
                    models.DecimalField(
                        db_column="new_decimal_2", decimal_places=3, max_digits=12
                    ),
                ),
                ("date_1", models.DateField(db_column="new_date_1")),
                ("time_1", models.TimeField(db_column="new_time_1")),
                ("datetime_1", models.DateTimeField(db_column="new_datetime_1")),
            ],
            options={
                "db_table": "model_field_types",
            },
        ),
        migrations.CreateModel(
            name="ModelGeneralOne",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                (
                    "f_decimal",
                    models.DecimalField(decimal_places=6, max_digits=18, null=True),
                ),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "parent_1_1",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_1_1",
                        to="orm_only.ModelGeneralOne",
                    ),
                ),
                (
                    "parent_x_1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_1_x",
                        to="orm_only.ModelGeneralOne",
                    ),
                ),
                (
                    "parent_x_x",
                    models.ManyToManyField(
                        related_name="child_x_x", to="orm_only.ModelGeneralOne"
                    ),
                ),
            ],
            options={
                "db_table": "model_general_one",
            },
        ),
        migrations.CreateModel(
            name="ModelGeneralTwo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                (
                    "f_decimal",
                    models.DecimalField(decimal_places=6, max_digits=18, null=True),
                ),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "one_1_1",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_1",
                        to="orm_only.ModelGeneralOne",
                    ),
                ),
                (
                    "one_x_1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_x",
                        to="orm_only.ModelGeneralOne",
                    ),
                ),
                (
                    "parent_1_1",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_1_1",
                        to="orm_only.ModelGeneralTwo",
                    ),
                ),
                (
                    "parent_x_1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_1_x",
                        to="orm_only.ModelGeneralTwo",
                    ),
                ),
                (
                    "parent_x_x",
                    models.ManyToManyField(
                        related_name="child_x_x", to="orm_only.ModelGeneralTwo"
                    ),
                ),
            ],
            options={
                "db_table": "model_general_two",
            },
        ),
        migrations.CreateModel(
            name="ModelManyRefsOne",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_many_refs_one",
            },
        ),
        migrations.CreateModel(
            name="ModelManyRefsTwo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "one_1_1_b",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_1_b",
                        to="orm_only.ModelManyRefsOne",
                    ),
                ),
                (
                    "one_x_1_b",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_x_b",
                        to="orm_only.ModelManyRefsOne",
                    ),
                ),
                (
                    "one_x_x_b",
                    models.ManyToManyField(
                        related_name="two_x_x_b", to="orm_only.ModelManyRefsOne"
                    ),
                ),
            ],
            options={
                "db_table": "model_many_refs_two",
            },
        ),
        migrations.CreateModel(
            name="ModelMergeOne",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_merge_one",
            },
        ),
        migrations.CreateModel(
            name="ModelMergeOneX",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_merge_one_x",
            },
        ),
        migrations.CreateModel(
            name="ModelMergeThree",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_merge_three",
            },
        ),
        migrations.CreateModel(
            name="ModelMergeThreeX",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
            ],
            options={
                "db_table": "model_merge_three_x",
            },
        ),
        migrations.CreateModel(
            name="ModelMergeTwo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "three_1_1",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_1",
                        to="orm_only.ModelMergeThree",
                    ),
                ),
                (
                    "three_x_1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_x",
                        to="orm_only.ModelMergeThree",
                    ),
                ),
            ],
            options={
                "db_table": "model_merge_two",
            },
        ),
        migrations.CreateModel(
            name="ModelMergeTwoX",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("f_binary", models.BinaryField(null=True)),
                ("f_boolean", models.NullBooleanField()),
                ("f_string", models.CharField(max_length=255, null=True)),
                ("f_text", models.TextField(null=True)),
                ("f_integer", models.IntegerField(null=True)),
                ("f_float", models.FloatField(null=True)),
                ("f_date", models.DateField(null=True)),
                ("f_time", models.TimeField(null=True)),
                ("f_datetime", models.DateTimeField(null=True)),
                (
                    "three_x_1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="two_1_x",
                        to="orm_only.ModelMergeThreeX",
                    ),
                ),
            ],
            options={
                "db_table": "model_merge_two_x",
            },
        ),
        migrations.AddField(
            model_name="modelmergeonex",
            name="two_x_1",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="one_1_x",
                to="orm_only.ModelMergeTwoX",
            ),
        ),
        migrations.AddField(
            model_name="modelmergeone",
            name="two_1_1",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="one_1_1",
                to="orm_only.ModelMergeTwo",
            ),
        ),
        migrations.AddField(
            model_name="modelmergeone",
            name="two_x_1",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="one_1_x",
                to="orm_only.ModelMergeTwo",
            ),
        ),
        migrations.AddField(
            model_name="modelmanyrefsone",
            name="two_1_1_a",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="one_1_1_a",
                to="orm_only.ModelManyRefsTwo",
            ),
        ),
        migrations.AddField(
            model_name="modelmanyrefsone",
            name="two_x_1_a",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="one_1_x_a",
                to="orm_only.ModelManyRefsTwo",
            ),
        ),
        migrations.AddField(
            model_name="modelmanyrefsone",
            name="two_x_x_a",
            field=models.ManyToManyField(
                related_name="one_x_x_a", to="orm_only.ModelManyRefsTwo"
            ),
        ),
        migrations.AddField(
            model_name="modelgeneralone",
            name="two_x_1",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="one_1_x",
                to="orm_only.ModelGeneralTwo",
            ),
        ),
        migrations.AddField(
            model_name="modelgeneralone",
            name="two_x_x",
            field=models.ManyToManyField(
                related_name="one_x_x", to="orm_only.ModelGeneralTwo"
            ),
        ),
        migrations.AddField(
            model_name="modelconstraintsthree",
            name="two_x_x",
            field=models.ManyToManyField(
                related_name="three_x_x", to="orm_only.ModelConstraintsTwo"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="modelconstraintsfour",
            unique_together={("f_integer", "f_string")},
        ),
        migrations.AddField(
            model_name="modelconstraintsfive",
            name="four_1_1",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="five_1_1",
                to="orm_only.ModelConstraintsFour",
            ),
        ),
        migrations.AddField(
            model_name="modelconstraintsfive",
            name="one_1_1",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="five_1_1",
                to="orm_only.ModelConstraintsOne",
            ),
        ),
        migrations.AddField(
            model_name="modelautoreverseone",
            name="three_a_x_1",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="orm_only.ModelAutoReverseThreeA",
            ),
        ),
        migrations.AddField(
            model_name="modelautoreverseone",
            name="three_b_x_1",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="orm_only.ModelAutoReverseThreeB",
            ),
        ),
        migrations.AddField(
            model_name="modelautoreverseone",
            name="two_a_1_1",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="orm_only.ModelAutoReverseTwoA",
            ),
        ),
        migrations.AddField(
            model_name="modelautoreverseone",
            name="two_b_1_1",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="orm_only.ModelAutoReverseTwoB",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="modelmergetwox",
            unique_together={("f_integer", "three_x_1")},
        ),
        migrations.AlterUniqueTogether(
            name="modelmergeonex",
            unique_together={("f_integer", "two_x_1")},
        ),
        migrations.AlterUniqueTogether(
            name="modelconstraintssix",
            unique_together={("five_1_1", "f_integer")},
        ),
    ]
