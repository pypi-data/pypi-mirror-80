# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from gv_proto.proto import archivist_pb2 as gv__proto_dot_proto_dot_archivist__pb2
from gv_proto.proto import broadcaster_pb2 as gv__proto_dot_proto_dot_broadcaster__pb2
from gv_proto.proto import common_pb2 as gv__proto_dot_proto_dot_common__pb2
from gv_proto.proto import geographer_pb2 as gv__proto_dot_proto_dot_geographer__pb2


class InterfaceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.publish_data_points = channel.unary_unary(
            '/gv_proto.proto.Interface/publish_data_points',
            request_serializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )
        self.publish_mapping_roads_data_points = channel.unary_unary(
            '/gv_proto.proto.Interface/publish_mapping_roads_data_points',
            request_serializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )
        self.publish_indicators = channel.unary_unary(
            '/gv_proto.proto.Interface/publish_indicators',
            request_serializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )
        self.publish_data_quality = channel.unary_unary(
            '/gv_proto.proto.Interface/publish_data_quality',
            request_serializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )
        self.publish_travel_times = channel.unary_unary(
            '/gv_proto.proto.Interface/publish_travel_times',
            request_serializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )
        self.subscribe = channel.unary_stream(
            '/gv_proto.proto.Interface/subscribe',
            request_serializer=gv__proto_dot_proto_dot_broadcaster__pb2.SubRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_any__pb2.Any.FromString,
        )
        self.get_indicators = channel.unary_stream(
            '/gv_proto.proto.Interface/get_indicators',
            request_serializer=gv__proto_dot_proto_dot_archivist__pb2.IndicatorsRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_archivist__pb2.Indicators.FromString,
        )
        self.get_data_quality = channel.unary_unary(
            '/gv_proto.proto.Interface/get_data_quality',
            request_serializer=gv__proto_dot_proto_dot_archivist__pb2.DataQualityRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_archivist__pb2.DataQuality.FromString,
        )
        self.get_travel_times = channel.unary_unary(
            '/gv_proto.proto.Interface/get_travel_times',
            request_serializer=gv__proto_dot_proto_dot_archivist__pb2.TravelTimesRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_archivist__pb2.TravelTimes.FromString,
        )
        self.add_mapping_roads_data_points = channel.unary_unary(
            '/gv_proto.proto.Interface/add_mapping_roads_data_points',
            request_serializer=gv__proto_dot_proto_dot_geographer__pb2.Mapping.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )
        self.add_data_points = channel.unary_unary(
            '/gv_proto.proto.Interface/add_data_points',
            request_serializer=gv__proto_dot_proto_dot_geographer__pb2.Locations.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )
        self.import_shapefile_to_db = channel.unary_unary(
            '/gv_proto.proto.Interface/import_shapefile_to_db',
            request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )
        self.get_data_points = channel.unary_unary(
            '/gv_proto.proto.Interface/get_data_points',
            request_serializer=gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_geographer__pb2.Locations.FromString,
        )
        self.get_roads = channel.unary_unary(
            '/gv_proto.proto.Interface/get_roads',
            request_serializer=gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_geographer__pb2.Locations.FromString,
        )
        self.get_zone_points = channel.unary_unary(
            '/gv_proto.proto.Interface/get_zone_points',
            request_serializer=gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_geographer__pb2.Locations.FromString,
        )
        self.get_mapping_roads_data_points = channel.unary_unary(
            '/gv_proto.proto.Interface/get_mapping_roads_data_points',
            request_serializer=gv__proto_dot_proto_dot_geographer__pb2.MappingRequest.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_geographer__pb2.Mapping.FromString,
        )
        self.update_roads_freeflow_speed = channel.unary_unary(
            '/gv_proto.proto.Interface/update_roads_freeflow_speed',
            request_serializer=gv__proto_dot_proto_dot_geographer__pb2.FreeflowSpeeds.SerializeToString,
            response_deserializer=gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
        )


class InterfaceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def publish_data_points(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def publish_mapping_roads_data_points(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def publish_indicators(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def publish_data_quality(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def publish_travel_times(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subscribe(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_indicators(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_data_quality(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_travel_times(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_mapping_roads_data_points(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_data_points(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def import_shapefile_to_db(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_data_points(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_roads(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_zone_points(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_mapping_roads_data_points(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_roads_freeflow_speed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'publish_data_points': grpc.unary_unary_rpc_method_handler(
            servicer.publish_data_points,
            request_deserializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
        'publish_mapping_roads_data_points': grpc.unary_unary_rpc_method_handler(
            servicer.publish_mapping_roads_data_points,
            request_deserializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
        'publish_indicators': grpc.unary_unary_rpc_method_handler(
            servicer.publish_indicators,
            request_deserializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
        'publish_data_quality': grpc.unary_unary_rpc_method_handler(
            servicer.publish_data_quality,
            request_deserializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
        'publish_travel_times': grpc.unary_unary_rpc_method_handler(
            servicer.publish_travel_times,
            request_deserializer=gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
        'subscribe': grpc.unary_stream_rpc_method_handler(
            servicer.subscribe,
            request_deserializer=gv__proto_dot_proto_dot_broadcaster__pb2.SubRequest.FromString,
            response_serializer=google_dot_protobuf_dot_any__pb2.Any.SerializeToString,
        ),
        'get_indicators': grpc.unary_stream_rpc_method_handler(
            servicer.get_indicators,
            request_deserializer=gv__proto_dot_proto_dot_archivist__pb2.IndicatorsRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_archivist__pb2.Indicators.SerializeToString,
        ),
        'get_data_quality': grpc.unary_unary_rpc_method_handler(
            servicer.get_data_quality,
            request_deserializer=gv__proto_dot_proto_dot_archivist__pb2.DataQualityRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_archivist__pb2.DataQuality.SerializeToString,
        ),
        'get_travel_times': grpc.unary_unary_rpc_method_handler(
            servicer.get_travel_times,
            request_deserializer=gv__proto_dot_proto_dot_archivist__pb2.TravelTimesRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_archivist__pb2.TravelTimes.SerializeToString,
        ),
        'add_mapping_roads_data_points': grpc.unary_unary_rpc_method_handler(
            servicer.add_mapping_roads_data_points,
            request_deserializer=gv__proto_dot_proto_dot_geographer__pb2.Mapping.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
        'add_data_points': grpc.unary_unary_rpc_method_handler(
            servicer.add_data_points,
            request_deserializer=gv__proto_dot_proto_dot_geographer__pb2.Locations.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
        'import_shapefile_to_db': grpc.unary_unary_rpc_method_handler(
            servicer.import_shapefile_to_db,
            request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
        'get_data_points': grpc.unary_unary_rpc_method_handler(
            servicer.get_data_points,
            request_deserializer=gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_geographer__pb2.Locations.SerializeToString,
        ),
        'get_roads': grpc.unary_unary_rpc_method_handler(
            servicer.get_roads,
            request_deserializer=gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_geographer__pb2.Locations.SerializeToString,
        ),
        'get_zone_points': grpc.unary_unary_rpc_method_handler(
            servicer.get_zone_points,
            request_deserializer=gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_geographer__pb2.Locations.SerializeToString,
        ),
        'get_mapping_roads_data_points': grpc.unary_unary_rpc_method_handler(
            servicer.get_mapping_roads_data_points,
            request_deserializer=gv__proto_dot_proto_dot_geographer__pb2.MappingRequest.FromString,
            response_serializer=gv__proto_dot_proto_dot_geographer__pb2.Mapping.SerializeToString,
        ),
        'update_roads_freeflow_speed': grpc.unary_unary_rpc_method_handler(
            servicer.update_roads_freeflow_speed,
            request_deserializer=gv__proto_dot_proto_dot_geographer__pb2.FreeflowSpeeds.FromString,
            response_serializer=gv__proto_dot_proto_dot_common__pb2.Ack.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'gv_proto.proto.Interface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Interface(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def publish_data_points(request,
                            target,
                            options=(),
                            channel_credentials=None,
                            call_credentials=None,
                            compression=None,
                            wait_for_ready=None,
                            timeout=None,
                            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/publish_data_points',
                                             gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def publish_mapping_roads_data_points(request,
                                          target,
                                          options=(),
                                          channel_credentials=None,
                                          call_credentials=None,
                                          compression=None,
                                          wait_for_ready=None,
                                          timeout=None,
                                          metadata=None):
        return grpc.experimental.unary_unary(request, target,
                                             '/gv_proto.proto.Interface/publish_mapping_roads_data_points',
                                             gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def publish_indicators(request,
                           target,
                           options=(),
                           channel_credentials=None,
                           call_credentials=None,
                           compression=None,
                           wait_for_ready=None,
                           timeout=None,
                           metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/publish_indicators',
                                             gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def publish_data_quality(request,
                             target,
                             options=(),
                             channel_credentials=None,
                             call_credentials=None,
                             compression=None,
                             wait_for_ready=None,
                             timeout=None,
                             metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/publish_data_quality',
                                             gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def publish_travel_times(request,
                             target,
                             options=(),
                             channel_credentials=None,
                             call_credentials=None,
                             compression=None,
                             wait_for_ready=None,
                             timeout=None,
                             metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/publish_travel_times',
                                             gv__proto_dot_proto_dot_broadcaster__pb2.PubRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def subscribe(request,
                  target,
                  options=(),
                  channel_credentials=None,
                  call_credentials=None,
                  compression=None,
                  wait_for_ready=None,
                  timeout=None,
                  metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gv_proto.proto.Interface/subscribe',
                                              gv__proto_dot_proto_dot_broadcaster__pb2.SubRequest.SerializeToString,
                                              google_dot_protobuf_dot_any__pb2.Any.FromString,
                                              options, channel_credentials,
                                              call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_indicators(request,
                       target,
                       options=(),
                       channel_credentials=None,
                       call_credentials=None,
                       compression=None,
                       wait_for_ready=None,
                       timeout=None,
                       metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gv_proto.proto.Interface/get_indicators',
                                              gv__proto_dot_proto_dot_archivist__pb2.IndicatorsRequest.SerializeToString,
                                              gv__proto_dot_proto_dot_archivist__pb2.Indicators.FromString,
                                              options, channel_credentials,
                                              call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_data_quality(request,
                         target,
                         options=(),
                         channel_credentials=None,
                         call_credentials=None,
                         compression=None,
                         wait_for_ready=None,
                         timeout=None,
                         metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/get_data_quality',
                                             gv__proto_dot_proto_dot_archivist__pb2.DataQualityRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_archivist__pb2.DataQuality.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_travel_times(request,
                         target,
                         options=(),
                         channel_credentials=None,
                         call_credentials=None,
                         compression=None,
                         wait_for_ready=None,
                         timeout=None,
                         metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/get_travel_times',
                                             gv__proto_dot_proto_dot_archivist__pb2.TravelTimesRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_archivist__pb2.TravelTimes.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_mapping_roads_data_points(request,
                                      target,
                                      options=(),
                                      channel_credentials=None,
                                      call_credentials=None,
                                      compression=None,
                                      wait_for_ready=None,
                                      timeout=None,
                                      metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/add_mapping_roads_data_points',
                                             gv__proto_dot_proto_dot_geographer__pb2.Mapping.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_data_points(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/add_data_points',
                                             gv__proto_dot_proto_dot_geographer__pb2.Locations.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def import_shapefile_to_db(request,
                               target,
                               options=(),
                               channel_credentials=None,
                               call_credentials=None,
                               compression=None,
                               wait_for_ready=None,
                               timeout=None,
                               metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/import_shapefile_to_db',
                                             google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_data_points(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/get_data_points',
                                             gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_geographer__pb2.Locations.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_roads(request,
                  target,
                  options=(),
                  channel_credentials=None,
                  call_credentials=None,
                  compression=None,
                  wait_for_ready=None,
                  timeout=None,
                  metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/get_roads',
                                             gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_geographer__pb2.Locations.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_zone_points(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/get_zone_points',
                                             gv__proto_dot_proto_dot_geographer__pb2.LocationsRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_geographer__pb2.Locations.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_mapping_roads_data_points(request,
                                      target,
                                      options=(),
                                      channel_credentials=None,
                                      call_credentials=None,
                                      compression=None,
                                      wait_for_ready=None,
                                      timeout=None,
                                      metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/get_mapping_roads_data_points',
                                             gv__proto_dot_proto_dot_geographer__pb2.MappingRequest.SerializeToString,
                                             gv__proto_dot_proto_dot_geographer__pb2.Mapping.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_roads_freeflow_speed(request,
                                    target,
                                    options=(),
                                    channel_credentials=None,
                                    call_credentials=None,
                                    compression=None,
                                    wait_for_ready=None,
                                    timeout=None,
                                    metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gv_proto.proto.Interface/update_roads_freeflow_speed',
                                             gv__proto_dot_proto_dot_geographer__pb2.FreeflowSpeeds.SerializeToString,
                                             gv__proto_dot_proto_dot_common__pb2.Ack.FromString,
                                             options, channel_credentials,
                                             call_credentials, compression, wait_for_ready, timeout, metadata)
