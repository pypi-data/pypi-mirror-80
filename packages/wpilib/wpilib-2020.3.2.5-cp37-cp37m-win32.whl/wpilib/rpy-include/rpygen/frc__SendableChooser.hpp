
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <..\_impl\include\frc\smartdashboard\SendableChooser.h>




#include <rpygen/frc__SendableChooserBase.hpp>

namespace rpygen {

using namespace frc;


template <typename CxxBase>
using PyBasefrc__SendableChooser = 
    Pyfrc__SendableChooserBase<
        CxxBase
    
    >
;

template <typename CxxBase, typename T>
struct Pyfrc__SendableChooser : PyBasefrc__SendableChooser<CxxBase> {
    using PyBasefrc__SendableChooser<CxxBase>::PyBasefrc__SendableChooser;



#ifndef RPYGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(SendableBuilder& builder) override {
PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(void), CxxBase, "initSendable", InitSendable,builder);    }
#endif



};

}; // namespace rpygen


namespace rpygen {

using namespace frc;


template <typename T>
struct bind_frc__SendableChooser {

    

    py::class_<typename frc::SendableChooser<T>, std::shared_ptr<typename frc::SendableChooser<T>>, rpygen::Pyfrc__SendableChooser<typename frc::SendableChooser<T>, T>, SendableChooserBase> cls_SendableChooser;




    py::module &m;
    std::string clsName;

bind_frc__SendableChooser(py::module &m, const char * clsName) :
    cls_SendableChooser(m, clsName),



    m(m),
    clsName(clsName)
{}

void finish() {

    
  cls_SendableChooser.doc() =
"The SendableChooser class is a useful tool for presenting a selection of\n"
"options to the SmartDashboard.\n"
"\n"
"For instance, you may wish to be able to select between multiple autonomous\n"
"modes. You can do this by putting every possible Command you want to run as\n"
"an autonomous into a SendableChooser and then put it into the SmartDashboard\n"
"to have a list of options appear on the laptop. Once autonomous starts,\n"
"simply ask the SendableChooser what the selected value is.\n"
"\n"
"@tparam T The type of values to be stored\n"
"@see SmartDashboard";

  cls_SendableChooser
    .def(py::init<>(), release_gil())
      .def("addOption", &frc::SendableChooser<T>::AddOption,
      py::arg("name"), py::arg("object"), release_gil()
  )
    
      .def("setDefaultOption", &frc::SendableChooser<T>::SetDefaultOption,
      py::arg("name"), py::arg("object"), release_gil()
  )
    
      .def("getSelected", [](frc::SendableChooser<T> * __that) {
  return __that->GetSelected();
}

  )
    
      .def("initSendable", &frc::SendableChooser<T>::InitSendable,
      py::arg("builder"), release_gil()
  )
    
;

  

    
}

}; // struct bind_frc__SendableChooser

}; // namespace rpygen