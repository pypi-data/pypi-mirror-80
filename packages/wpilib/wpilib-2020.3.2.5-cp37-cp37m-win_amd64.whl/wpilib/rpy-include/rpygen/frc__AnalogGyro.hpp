
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <..\_impl\include\frc\AnalogGyro.h>

#include <frc/smartdashboard/SendableBuilder.h>
#include <frc/AnalogInput.h>



#include <rpygen/frc__GyroBase.hpp>

namespace rpygen {

using namespace frc;


template <typename CxxBase>
using PyBasefrc__AnalogGyro = 
    Pyfrc__GyroBase<
        CxxBase
    
    >
;

template <typename CxxBase>
struct Pyfrc__AnalogGyro : PyBasefrc__AnalogGyro<CxxBase> {
    using PyBasefrc__AnalogGyro<CxxBase>::PyBasefrc__AnalogGyro;



#ifndef RPYGEN_DISABLE_KGetAngle_v
    double GetAngle() const override {
PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(double), CxxBase, "getAngle", GetAngle,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetRate_v
    double GetRate() const override {
PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(double), CxxBase, "getRate", GetRate,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetCenter_v
    int GetCenter() const override {
PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(int), CxxBase, "getCenter", GetCenter,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetOffset_v
    double GetOffset() const override {
PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(double), CxxBase, "getOffset", GetOffset,);    }
#endif

#ifndef RPYGEN_DISABLE_Reset_v
    void Reset() override {
PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(void), CxxBase, "reset", Reset,);    }
#endif

#ifndef RPYGEN_DISABLE_InitGyro_v
    void InitGyro() override {
PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(void), CxxBase, "initGyro", InitGyro,);    }
#endif

#ifndef RPYGEN_DISABLE_Calibrate_v
    void Calibrate() override {
PYBIND11_OVERLOAD_NAME(PYBIND11_TYPE(void), CxxBase, "calibrate", Calibrate,);    }
#endif



    using frc::AnalogGyro::m_analog;
};

}; // namespace rpygen
