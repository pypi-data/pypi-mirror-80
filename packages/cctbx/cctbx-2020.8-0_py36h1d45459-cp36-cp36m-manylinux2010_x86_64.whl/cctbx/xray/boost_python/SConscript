import libtbx.load_env
Import('env_etc', "env_cctbx_boost_python_ext")
env = env_cctbx_boost_python_ext.Clone()
env_etc.include_registry.append(env=env, paths=[env_etc.fable_include])
env_etc.enable_more_warnings(env=env)

libs = ["cctbx", "omptbx"]
sources = [
  "xray_ext.cpp",
  "conversions.cpp",
  "gradient_flags.cpp",
  "gradients_direct.cpp",
  "each_hkl_gradients_direct.cpp",
  "fast_gradients.cpp",
  "minimization.cpp",
  "scatterer_flags.cpp",
  "scatterer.cpp",
  "scattering_type_registry.cpp",
  "sampling_base.cpp",
  "sampled_model_density.cpp",
  "structure_factors_direct.cpp",
  "structure_factors_simple.cpp",
  "curvatures_simple.cpp",
  "targets.cpp",
  "f_model_bpl.cpp",
  "twin_targets.cpp",
  "grouped_data.cpp",
  "parameter_map.cpp",
  "twin_components.cpp",
  "extinction.cpp",
  "sigmaa.cpp",
  "../targets/shelxl_wght_ls_bpl.cpp",
]
env.Prepend(LIBS=libs)
env.SharedLibrary(target="#lib/cctbx_xray_ext", source=sources)
