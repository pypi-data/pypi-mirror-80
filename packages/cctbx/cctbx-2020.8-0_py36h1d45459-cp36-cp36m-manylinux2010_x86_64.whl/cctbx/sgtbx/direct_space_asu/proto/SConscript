import os
import libtbx
Import("env_base", "env_etc")
env = env_base.Clone(LIBS=["cctbx"]+env_etc.libm)

env_etc.include_registry.append(
  env=env,
  paths=env_etc.cctbx_common_includes)

lib_asu_sources = [
  "cut.cpp",
  "reference_table.cpp",
  "direct_space_asu.cpp"
]

if (env_etc.static_libraries): builder = env.StaticLibrary
else:                          builder = env.SharedLibrary

builder(
  target="#lib/cctbx_sgtbx_asu",
  source=lib_asu_sources)

env = env.Clone()
env.Prepend(LIBS=["cctbx_sgtbx_asu"])
env.Program( target = "tst_asu",  source="tst_asu.cpp")

if (not env_etc.no_boost_python):
  Import("env_cctbx_boost_python_ext")
  env_bpl = env_cctbx_boost_python_ext.Clone()
  env_etc.include_registry.append(
    env=env_bpl,
    paths=env_etc.cctbx_common_includes)
  env_bpl.Prepend(LIBS=["cctbx_sgtbx_asu", "cctbx"])
  env_bpl.SharedLibrary(
    target="#lib/cctbx_sgtbx_asu_ext",
    source=["asu_ext.cpp"])
