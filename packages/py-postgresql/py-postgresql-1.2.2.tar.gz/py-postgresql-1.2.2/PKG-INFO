Metadata-Version: 2.1
Name: py-postgresql
Version: 1.2.2
Summary: PostgreSQL driver and tools library.
Home-page: http://github.com/python-postgres/fe
Author: James William Pye
Author-email: james.pye@gmail.com
Maintainer: James William Pye
Maintainer-email: james.pye@gmail.com
License: UNKNOWN
Description: 
        .. warning::
        	In v1.3, `postgresql.driver.dbapi20.connect` will now raise `ClientCannotConnectError` directly.
        	Exception traps around connect should still function, but the `__context__` attribute
        	on the error instance will be `None` in the usual failure case as it is no longer
        	incorrectly chained. Trapping `ClientCannotConnectError` ahead of `Error` should
        	allow both cases to co-exist in the event that data is being extracted from
        	the `ClientCannotConnectError`.
        
        py-postgresql is a set of Python modules providing interfaces to various parts
        of PostgreSQL. Primarily, it provides a pure-Python driver with some C optimizations for
        querying a PostgreSQL database.
        
        http://github.com/python-postgres/fe
        
        Features:
        
         * Prepared Statement driven interfaces.
         * Cluster tools for creating and controlling a cluster.
         * Support for most PostgreSQL types: composites, arrays, numeric, lots more.
         * COPY support.
        
        Sample PG-API Code::
        
        	>>> import postgresql
        	>>> db = postgresql.open('pq://user:password@host:port/database')
        	>>> db.execute("CREATE TABLE emp (emp_first_name text, emp_last_name text, emp_salary numeric)")
        	>>> make_emp = db.prepare("INSERT INTO emp VALUES ($1, $2, $3)")
        	>>> make_emp("John", "Doe", "75,322")
        	>>> with db.xact():
        	...  make_emp("Jane", "Doe", "75,322")
        	...  make_emp("Edward", "Johnson", "82,744")
        	...
        
        There is a DB-API 2.0 module as well::
        
        	postgresql.driver.dbapi20
        
        However, PG-API is recommended as it provides greater utility.
        
        Once installed, try out the ``pg_python`` console script::
        
        	$ python3 -m postgresql.bin.pg_python -h localhost -p port -U theuser -d database_name
        
        If a successful connection is made to the remote host, it will provide a Python
        console with the database connection bound to the `db` name.
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: License :: OSI Approved :: MIT License
Classifier: License :: OSI Approved :: Attribution Assurance License
Classifier: License :: OSI Approved :: Python Software Foundation License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Database
Description-Content-Type: text/x-rst
