Metadata-Version: 2.1
Name: neuralplot
Version: 0.0.4
Summary: A Library for visualizing Neural Networks.
Home-page: https://github.com/Rajsoni03/Neural-Plot
Author: Rajkumar Soni
Author-email: rajksoni029@gmail.com
License: UNKNOWN
Description: 
        
        # Neural Plot
        [![PyPI version](https://img.shields.io/badge/PyPi-v%200.0.4-green.svg)](https://pypi.org/project/neuralplot/)
        [![Python version](https://img.shields.io/badge/python-v3.6%20v3.7%20v3.8-red.svg)](https://pypi.org/project/neuralplot/)
        [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/Rajsoni03/Neural-Plot//blob/master/Example%20Notebook.ipynb) 
        
        Neural Plot is a python library for visualizing Neural Networks.
        It helps to plot Keras/Tensorflow model with matplotlib backend.
        
        
        ## Installation
        
        Run the following to install:
        ```
        pip install neuralplot
        ```
        
        ## Example
        
        
        ```python
        # Importing Libraries
        from neuralplot import ModelPlot
        import tensorflow as tf
        import numpy as np
        ```
        ```python
        # Uncomment while using Colab.
        # %matplotlib inline 
        
        # Uncomment while using jupyter notebook. This feature is not working in colab.
        %matplotlib notebook 
        ```
        ```python
        #Creating Model
        X_input = tf.keras.layers.Input(shape=(32,32,3))
        X = tf.keras.layers.Conv2D(4, 3, activation='relu')(X_input)
        X = tf.keras.layers.MaxPool2D(2,2)(X)
        X = tf.keras.layers.Conv2D(16, 3, activation='relu')(X)
        X = tf.keras.layers.MaxPool2D(2,2)(X)
        X = tf.keras.layers.Conv2D(8, 3, activation='relu')(X)
        X = tf.keras.layers.MaxPool2D(2,2)(X)
        X = tf.keras.layers.Flatten()(X)
        X = tf.keras.layers.Dense(10, activation='relu')(X)
        X = tf.keras.layers.Dense(2, activation='softmax')(X)
        
        model = tf.keras.models.Model(inputs=X_input, outputs=X)
        ```
        ```python
        modelplot = ModelPlot(model=model, grid=True, connection=True, linewidth=0.1)
        modelplot.show()
        ```
        .. image::  https://github.com/Rajsoni03/Neural-Plot/blob/master/Screenshot/Image-011.png
        
        ```python
        modelplot = ModelPlot(model=model, grid=False, connection=True, linewidth=0.1)
        modelplot.show()
        ```
        .. image::  https://github.com/Rajsoni03/Neural-Plot/blob/master/Screenshot/Image-010.png
        
        
        
        
        License
        ----
        MIT
        
        
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
