apiVersion: v1
kind: Template
metadata:
  name: kebechet
  annotations:
    description: This is Kebechet Job Config, this template is meant to be used by Bots, but could also be used by humans...
    openshift.io/display-name: Kebechet Job
    version: 1.0.1
    tags: thoth,ai-stacks,kebechet,cyborg,srcops
    template.openshift.io/documentation-url: https://github.com/thoth-station/kebechet/
    template.openshift.io/long-description: This is Kebechet used for automatic package releases and updates.
    template.openshift.io/provider-display-name: Red Hat, Inc.
    thoth-station.ninja/template-version: 1.0.1
  labels:
    app: thoth
    template: kebechet
    component: kebechet

parameters:
  - description: Registry the ImageStream to be use lives in
    displayName: ImageStream Registry
    required: true
    name: IMAGE_STREAM_REGISTRY
    value: "docker-registry.default.svc:5000"
  - description: Project the ImageStream to be use lives in
    displayName: ImageStream Project
    required: true
    name: IMAGE_STREAM_NAMESPACE
    value: "thoth-test-core"
  - description: Tag of the ImageStream to be use
    displayName: ImageStream Tag
    required: true
    name: IMAGE_STREAM_TAG
    value: "latest"
  - description: The repositories full URL
    displayName: Repository URL
    required: true
    name: KEBECHET_REPO_URL
  - description: The name of the git service the repository lives on
    displayName: git Service Name
    required: true
    name: KEBECHET_SERVICE_NAME
  - description: The ID of the Kebechet job
    displayName: Job ID
    required: true
    name: KEBECHET_JOB_ID
  - description: Determines if kebechet is in verbose mode
    displayName: Verbose Mode
    required: true
    name: KEBECHET_VERBOSE
    value: "1"
  - description: The kebechet subcommand which should be run
    displayName: Kebechet Subcommand
    required: true
    name: KEBECHET_SUBCOMMAND
  - description: The analysis that should be used to generate issues and pull requests
    displayName: Analysis ID
    required: false
    name: KEBECHET_ANALYSIS_ID

objects:
  - apiVersion: batch/v1
    kind: Job
    metadata:
      name: "${KEBECHET_JOB_ID}"
      labels:
        app: thoth
        componenet: kebechet
        task: kebechet
        mark: cleanup
    annotations:
      thoth-station.ninja/template-version: 1.0.1
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: kebechet
        spec:
          restartPolicy: "Never"
          automountServiceAccountToken: false
          containers:
            - image: ${IMAGE_STREAM_REGISTRY}/${IMAGE_STREAM_NAMESPACE}/kebechet-job:${IMAGE_STREAM_TAG}
              name: kebechet
              volumeMounts:
                - name: ssh-config
                  mountPath: /home/user/.ssh
                  readOnly: true
              env:
                - name: PIPENV_NOSPIN
                  value: "1"
                - name: PIPENV_COLORBLIND
                  value: "1"
                - name: PIPENV_HIDE_EMOJIS
                  value: "1"
                - name: KEBECHET_VERBOSE
                  value: "${KEBECHET_VERBOSE}"
                - name: KEBECHET_SUBCOMMAND
                  value: "${KEBECHET_SUBCOMMAND}"
                - name: KEBECHET_REPO_URL
                  value: "${KEBECHET_REPO_URL}"
                - name: KEBECHET_SERVICE_NAME
                  value: "${KEBECHET_SERVICE_NAME}"
                - name: KEBECHET_ANALYSIS_ID
                  value: "${KEBECHET_ANALYSIS_ID}"
                - name: GITHUB_KEBECHET_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: github-oauth-token
                      name: kebechet-secret
                - name: GITLAB_KEBECHET_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: gitlab-oauth-token
                      name: kebechet-secret
                - name: PAGURE_KEBECHET_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: pagure-oauth-token
                      name: kebechet-secret
                - name: SENTRY_DSN
                  valueFrom:
                    secretKeyRef:
                      key: sentry-dsn
                      name: thoth
                - name: THOTH_DEPLOYMENT_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: storage-bucket-name
                      name: thoth
              resources:
                requests:
                  memory: "2Gi"
                  cpu: "2"
                limits:
                  memory: "2Gi"
                  cpu: "2"
              livenessProbe:
                # Give kebechet 45 minutes to compute results, kill it if it was not able result anything.
                tcpSocket:
                  port: 80
                initialDelaySeconds: 2700
                failureThreshold: 1
          volumes:
            - name: ssh-config
              secret:
                secretName: kebechet-secret
                items:
                  - key: ssh-privatekey
                    path: id_rsa
                    mode: 0600
