Import("env_base", "env_etc")
env = env_base.Clone()
env_etc.include_registry.append(env=env,
                                paths=["."] + env_etc.smtbx_common_includes)
if (env_etc.static_libraries): builder = env.StaticLibrary
else:                          builder = env.SharedLibrary
builder(target="#lib/smtbx_refinement_constraints", source=Glob("*.cpp"))

env_program = env.Clone()
env_program.Prepend(LIBS=[ "cctbx", "smtbx_refinement_constraints" ])
env_program.Program(target="tests/tst_reparametrisation",
                    source="tests/tst_reparametrisation.cpp")
env_program.Program(target="tests/tst_geometrical_hydrogens",
                    source="tests/tst_geometrical_hydrogens.cpp")
env_program.Program(target="tests/tst_special_position",
                    source="tests/tst_special_position.cpp")
