# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: plog.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='plog.proto',
  package='panda',
  syntax='proto2',
  serialized_pb=_b('\n\nplog.proto\x12\x05panda\"j\n\x08\x41sidInfo\x12\x0c\n\x04\x61sid\x18\x01 \x02(\x04\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x0b\n\x03pid\x18\x03 \x02(\r\x12\x13\n\x0bstart_instr\x18\x04 \x02(\x04\x12\x11\n\tend_instr\x18\x05 \x02(\x04\x12\r\n\x05\x63ount\x18\x06 \x01(\x04\"\x19\n\tCallStack\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x03(\x04\"6\n\nBasicBlock\x12\x0c\n\x04\x61sid\x18\x01 \x01(\x04\x12\x0c\n\x04size\x18\x03 \x01(\r\x12\x0c\n\x04\x63ode\x18\x05 \x01(\x0c\"%\n\x04\x45\x64ge\x12\n\n\x02pc\x18\x02 \x03(\x04\x12\x11\n\thit_count\x18\x03 \x02(\x04\"\'\n\tAsidEdges\x12\x1a\n\x05\x65\x64ges\x18\x02 \x03(\x0b\x32\x0b.panda.Edge\"\x18\n\tAsidTrace\x12\x0b\n\x03pcs\x18\x01 \x03(\x04\"E\n\x06Module\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0c\n\x04\x66ile\x18\x02 \x02(\t\x12\x11\n\tbase_addr\x18\x03 \x02(\x04\x12\x0c\n\x04size\x18\x04 \x02(\x04\",\n\nLoadedLibs\x12\x1e\n\x07modules\x18\x02 \x03(\x0b\x32\r.panda.Module\"\x8b\x01\n\tDwarfCall\x12\x13\n\x0b\x66ile_callee\x18\x01 \x02(\t\x12\x1c\n\x14\x66unction_name_callee\x18\x02 \x02(\t\x12\x1a\n\x12line_number_callee\x18\x03 \x02(\x04\x12\x13\n\x0b\x66ile_caller\x18\x04 \x02(\t\x12\x1a\n\x12line_number_caller\x18\x05 \x02(\x04\"t\n\x0bSignalEvent\x12\x0b\n\x03sig\x18\x01 \x02(\x05\x12\x12\n\nsuppressed\x18\x02 \x02(\x08\x12\x10\n\x08src_name\x18\x03 \x02(\t\x12\x10\n\x08\x64st_name\x18\x04 \x02(\t\x12\x0f\n\x07src_pid\x18\x05 \x02(\x05\x12\x0f\n\x07\x64st_pid\x18\x06 \x02(\x05\"p\n\nSrcInfoPri\x12\x10\n\x08\x66ilename\x18\x01 \x02(\t\x12\x0f\n\x07linenum\x18\x02 \x02(\r\x12\x13\n\x0b\x61stnodename\x18\x03 \x02(\t\x12\x16\n\x0einsertionpoint\x18\x04 \x01(\r\x12\x12\n\nast_loc_id\x18\x05 \x01(\r\"i\n\x0e\x41ttackPointPri\x12\x0c\n\x04info\x18\x01 \x02(\r\x12$\n\ncall_stack\x18\x02 \x02(\x0b\x32\x10.panda.CallStack\x12#\n\x08src_info\x18\x03 \x02(\x0b\x32\x11.panda.SrcInfoPri\"\xbf\x01\n\rTaintQueryPri\x12\x0b\n\x03\x62uf\x18\x01 \x02(\x04\x12\x0b\n\x03len\x18\x02 \x02(\r\x12\x0c\n\x04\x64\x61ta\x18\x03 \x03(\r\x12\x13\n\x0bnum_tainted\x18\x04 \x02(\r\x12$\n\ncall_stack\x18\x05 \x02(\x0b\x32\x10.panda.CallStack\x12#\n\x08src_info\x18\x06 \x02(\x0b\x32\x11.panda.SrcInfoPri\x12&\n\x0btaint_query\x18\x07 \x03(\x0b\x32\x11.panda.TaintQuery\")\n\x08SerialTx\x12\r\n\x05value\x18\x01 \x02(\r\x12\x0e\n\x06labels\x18\x02 \x03(\r\"6\n\x18TaintQueryUniqueLabelSet\x12\x0b\n\x03ptr\x18\x01 \x02(\x04\x12\r\n\x05label\x18\x02 \x03(\r\"m\n\x07SrcInfo\x12\x10\n\x08\x66ilename\x18\x01 \x02(\r\x12\x0f\n\x07linenum\x18\x02 \x02(\r\x12\x13\n\x0b\x61stnodename\x18\x03 \x02(\r\x12\x16\n\x0einsertionpoint\x18\x04 \x01(\r\x12\x12\n\nast_loc_id\x18\x05 \x01(\r\"q\n\nTaintQuery\x12\x0b\n\x03ptr\x18\x01 \x02(\x04\x12\x0b\n\x03tcn\x18\x02 \x02(\r\x12\x0e\n\x06offset\x18\x03 \x02(\r\x12\x39\n\x10unique_label_set\x18\x04 \x01(\x0b\x32\x1f.panda.TaintQueryUniqueLabelSet\"c\n\x0b\x41ttackPoint\x12\x0c\n\x04info\x18\x01 \x02(\r\x12$\n\ncall_stack\x18\x02 \x02(\x0b\x32\x10.panda.CallStack\x12 \n\x08src_info\x18\x03 \x02(\x0b\x32\x0e.panda.SrcInfo\"\xc2\x01\n\x13TaintQueryHypercall\x12\x0b\n\x03\x62uf\x18\x01 \x02(\x04\x12\x0b\n\x03len\x18\x02 \x02(\r\x12\x0c\n\x04\x64\x61ta\x18\x03 \x03(\r\x12\x13\n\x0bnum_tainted\x18\x04 \x02(\r\x12$\n\ncall_stack\x18\x05 \x02(\x0b\x32\x10.panda.CallStack\x12 \n\x08src_info\x18\x06 \x02(\x0b\x32\x0e.panda.SrcInfo\x12&\n\x0btaint_query\x18\x07 \x03(\x0b\x32\x11.panda.TaintQuery\"]\n\rTaintedBranch\x12$\n\ncall_stack\x18\x01 \x02(\x0b\x32\x10.panda.CallStack\x12&\n\x0btaint_query\x18\x02 \x03(\x0b\x32\x11.panda.TaintQuery\"0\n\x14TaintedBranchSummary\x12\x0c\n\x04\x61sid\x18\x01 \x02(\x04\x12\n\n\x02pc\x18\x02 \x02(\x04\"-\n\rLabelLiveness\x12\r\n\x05label\x18\x01 \x02(\r\x12\r\n\x05\x63ount\x18\x02 \x02(\x04\"\\\n\x0cTaintedInstr\x12$\n\ncall_stack\x18\x01 \x02(\x0b\x32\x10.panda.CallStack\x12&\n\x0btaint_query\x18\x02 \x03(\x0b\x32\x11.panda.TaintQuery\"/\n\x13TaintedInstrSummary\x12\x0c\n\x04\x61sid\x18\x01 \x02(\x04\x12\n\n\x02pc\x18\x02 \x02(\x04\";\n\x10TaintedMmioLabel\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\r\n\x05label\x18\x02 \x02(\r\x12\x0c\n\x04\x61\x64\x64r\x18\x03 \x02(\x04\"\xbd\x08\n\x08LogEntry\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\r\n\x05instr\x18\x02 \x02(\x04\x12\"\n\tasid_info\x18( \x01(\x0b\x32\x0f.panda.AsidInfo\x12\x0c\n\x04\x61sid\x18\x03 \x01(\x04\x12$\n\ncall_stack\x18\n \x01(\x0b\x32\x10.panda.CallStack\x12&\n\x0b\x62\x61sic_block\x18* \x01(\x0b\x32\x11.panda.BasicBlock\x12\'\n\redge_coverage\x18) \x01(\x0b\x32\x10.panda.AsidEdges\x12\x1f\n\x05trace\x18+ \x01(\x0b\x32\x10.panda.AsidTrace\x12)\n\x0e\x61sid_libraries\x18\x05 \x01(\x0b\x32\x11.panda.LoadedLibs\x12$\n\ndwarf_call\x18\x42 \x01(\x0b\x32\x10.panda.DwarfCall\x12#\n\tdwarf_ret\x18\x43 \x01(\x0b\x32\x10.panda.DwarfCall\x12(\n\x0csignal_event\x18\x32 \x01(\x0b\x32\x12.panda.SignalEvent\x12-\n\x0ftaint_query_pri\x18\x44 \x01(\x0b\x32\x14.panda.TaintQueryPri\x12/\n\x10\x61ttack_point_pri\x18\x45 \x01(\x0b\x32\x15.panda.AttackPointPri\x12-\n\x12pri_trace_src_info\x18\x46 \x01(\x0b\x32\x11.panda.SrcInfoPri\x12\"\n\tserial_tx\x18\x66 \x01(\x0b\x32\x0f.panda.SerialTx\x12\x39\n\x15taint_query_hypercall\x18& \x01(\x0b\x32\x1a.panda.TaintQueryHypercall\x12(\n\x0c\x61ttack_point\x18\' \x01(\x0b\x32\x12.panda.AttackPoint\x12 \n\x18taint_label_virtual_addr\x18\x06 \x01(\x04\x12!\n\x19taint_label_physical_addr\x18\x07 \x01(\x04\x12\x1a\n\x12taint_label_number\x18\x08 \x01(\r\x12,\n\x0etainted_branch\x18$ \x01(\x0b\x32\x14.panda.TaintedBranch\x12;\n\x16tainted_branch_summary\x18H \x01(\x0b\x32\x1b.panda.TaintedBranchSummary\x12,\n\x0elabel_liveness\x18- \x01(\x0b\x32\x14.panda.LabelLiveness\x12*\n\rtainted_instr\x18% \x01(\x0b\x32\x13.panda.TaintedInstr\x12\x39\n\x15tainted_instr_summary\x18\x38 \x01(\x0b\x32\x1a.panda.TaintedInstrSummary\x12\x33\n\x12tainted_mmio_label\x18I \x01(\x0b\x32\x17.panda.TaintedMmioLabel')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ASIDINFO = _descriptor.Descriptor(
  name='AsidInfo',
  full_name='panda.AsidInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.AsidInfo.asid', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='panda.AsidInfo.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pid', full_name='panda.AsidInfo.pid', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_instr', full_name='panda.AsidInfo.start_instr', index=3,
      number=4, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_instr', full_name='panda.AsidInfo.end_instr', index=4,
      number=5, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='panda.AsidInfo.count', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=127,
)


_CALLSTACK = _descriptor.Descriptor(
  name='CallStack',
  full_name='panda.CallStack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='panda.CallStack.addr', index=0,
      number=1, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=129,
  serialized_end=154,
)


_BASICBLOCK = _descriptor.Descriptor(
  name='BasicBlock',
  full_name='panda.BasicBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.BasicBlock.asid', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='panda.BasicBlock.size', index=1,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='panda.BasicBlock.code', index=2,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=156,
  serialized_end=210,
)


_EDGE = _descriptor.Descriptor(
  name='Edge',
  full_name='panda.Edge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pc', full_name='panda.Edge.pc', index=0,
      number=2, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hit_count', full_name='panda.Edge.hit_count', index=1,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=212,
  serialized_end=249,
)


_ASIDEDGES = _descriptor.Descriptor(
  name='AsidEdges',
  full_name='panda.AsidEdges',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='edges', full_name='panda.AsidEdges.edges', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=251,
  serialized_end=290,
)


_ASIDTRACE = _descriptor.Descriptor(
  name='AsidTrace',
  full_name='panda.AsidTrace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pcs', full_name='panda.AsidTrace.pcs', index=0,
      number=1, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=292,
  serialized_end=316,
)


_MODULE = _descriptor.Descriptor(
  name='Module',
  full_name='panda.Module',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='panda.Module.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file', full_name='panda.Module.file', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='base_addr', full_name='panda.Module.base_addr', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='panda.Module.size', index=3,
      number=4, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=318,
  serialized_end=387,
)


_LOADEDLIBS = _descriptor.Descriptor(
  name='LoadedLibs',
  full_name='panda.LoadedLibs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='modules', full_name='panda.LoadedLibs.modules', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=389,
  serialized_end=433,
)


_DWARFCALL = _descriptor.Descriptor(
  name='DwarfCall',
  full_name='panda.DwarfCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file_callee', full_name='panda.DwarfCall.file_callee', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='function_name_callee', full_name='panda.DwarfCall.function_name_callee', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='line_number_callee', full_name='panda.DwarfCall.line_number_callee', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_caller', full_name='panda.DwarfCall.file_caller', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='line_number_caller', full_name='panda.DwarfCall.line_number_caller', index=4,
      number=5, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=436,
  serialized_end=575,
)


_SIGNALEVENT = _descriptor.Descriptor(
  name='SignalEvent',
  full_name='panda.SignalEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sig', full_name='panda.SignalEvent.sig', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='suppressed', full_name='panda.SignalEvent.suppressed', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_name', full_name='panda.SignalEvent.src_name', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dst_name', full_name='panda.SignalEvent.dst_name', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_pid', full_name='panda.SignalEvent.src_pid', index=4,
      number=5, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dst_pid', full_name='panda.SignalEvent.dst_pid', index=5,
      number=6, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=577,
  serialized_end=693,
)


_SRCINFOPRI = _descriptor.Descriptor(
  name='SrcInfoPri',
  full_name='panda.SrcInfoPri',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='panda.SrcInfoPri.filename', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linenum', full_name='panda.SrcInfoPri.linenum', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='astnodename', full_name='panda.SrcInfoPri.astnodename', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='insertionpoint', full_name='panda.SrcInfoPri.insertionpoint', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ast_loc_id', full_name='panda.SrcInfoPri.ast_loc_id', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=695,
  serialized_end=807,
)


_ATTACKPOINTPRI = _descriptor.Descriptor(
  name='AttackPointPri',
  full_name='panda.AttackPointPri',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='panda.AttackPointPri.info', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.AttackPointPri.call_stack', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_info', full_name='panda.AttackPointPri.src_info', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=809,
  serialized_end=914,
)


_TAINTQUERYPRI = _descriptor.Descriptor(
  name='TaintQueryPri',
  full_name='panda.TaintQueryPri',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='buf', full_name='panda.TaintQueryPri.buf', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='len', full_name='panda.TaintQueryPri.len', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='panda.TaintQueryPri.data', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_tainted', full_name='panda.TaintQueryPri.num_tainted', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.TaintQueryPri.call_stack', index=4,
      number=5, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_info', full_name='panda.TaintQueryPri.src_info', index=5,
      number=6, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query', full_name='panda.TaintQueryPri.taint_query', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=917,
  serialized_end=1108,
)


_SERIALTX = _descriptor.Descriptor(
  name='SerialTx',
  full_name='panda.SerialTx',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='panda.SerialTx.value', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labels', full_name='panda.SerialTx.labels', index=1,
      number=2, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1110,
  serialized_end=1151,
)


_TAINTQUERYUNIQUELABELSET = _descriptor.Descriptor(
  name='TaintQueryUniqueLabelSet',
  full_name='panda.TaintQueryUniqueLabelSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ptr', full_name='panda.TaintQueryUniqueLabelSet.ptr', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='panda.TaintQueryUniqueLabelSet.label', index=1,
      number=2, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1153,
  serialized_end=1207,
)


_SRCINFO = _descriptor.Descriptor(
  name='SrcInfo',
  full_name='panda.SrcInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='panda.SrcInfo.filename', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linenum', full_name='panda.SrcInfo.linenum', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='astnodename', full_name='panda.SrcInfo.astnodename', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='insertionpoint', full_name='panda.SrcInfo.insertionpoint', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ast_loc_id', full_name='panda.SrcInfo.ast_loc_id', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1209,
  serialized_end=1318,
)


_TAINTQUERY = _descriptor.Descriptor(
  name='TaintQuery',
  full_name='panda.TaintQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ptr', full_name='panda.TaintQuery.ptr', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tcn', full_name='panda.TaintQuery.tcn', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='panda.TaintQuery.offset', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unique_label_set', full_name='panda.TaintQuery.unique_label_set', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1320,
  serialized_end=1433,
)


_ATTACKPOINT = _descriptor.Descriptor(
  name='AttackPoint',
  full_name='panda.AttackPoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='panda.AttackPoint.info', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.AttackPoint.call_stack', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_info', full_name='panda.AttackPoint.src_info', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1435,
  serialized_end=1534,
)


_TAINTQUERYHYPERCALL = _descriptor.Descriptor(
  name='TaintQueryHypercall',
  full_name='panda.TaintQueryHypercall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='buf', full_name='panda.TaintQueryHypercall.buf', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='len', full_name='panda.TaintQueryHypercall.len', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='panda.TaintQueryHypercall.data', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_tainted', full_name='panda.TaintQueryHypercall.num_tainted', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.TaintQueryHypercall.call_stack', index=4,
      number=5, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_info', full_name='panda.TaintQueryHypercall.src_info', index=5,
      number=6, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query', full_name='panda.TaintQueryHypercall.taint_query', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1537,
  serialized_end=1731,
)


_TAINTEDBRANCH = _descriptor.Descriptor(
  name='TaintedBranch',
  full_name='panda.TaintedBranch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.TaintedBranch.call_stack', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query', full_name='panda.TaintedBranch.taint_query', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1733,
  serialized_end=1826,
)


_TAINTEDBRANCHSUMMARY = _descriptor.Descriptor(
  name='TaintedBranchSummary',
  full_name='panda.TaintedBranchSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.TaintedBranchSummary.asid', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pc', full_name='panda.TaintedBranchSummary.pc', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1828,
  serialized_end=1876,
)


_LABELLIVENESS = _descriptor.Descriptor(
  name='LabelLiveness',
  full_name='panda.LabelLiveness',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='panda.LabelLiveness.label', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='panda.LabelLiveness.count', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1878,
  serialized_end=1923,
)


_TAINTEDINSTR = _descriptor.Descriptor(
  name='TaintedInstr',
  full_name='panda.TaintedInstr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.TaintedInstr.call_stack', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query', full_name='panda.TaintedInstr.taint_query', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1925,
  serialized_end=2017,
)


_TAINTEDINSTRSUMMARY = _descriptor.Descriptor(
  name='TaintedInstrSummary',
  full_name='panda.TaintedInstrSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.TaintedInstrSummary.asid', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pc', full_name='panda.TaintedInstrSummary.pc', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2019,
  serialized_end=2066,
)


_TAINTEDMMIOLABEL = _descriptor.Descriptor(
  name='TaintedMmioLabel',
  full_name='panda.TaintedMmioLabel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pc', full_name='panda.TaintedMmioLabel.pc', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='panda.TaintedMmioLabel.label', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addr', full_name='panda.TaintedMmioLabel.addr', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2068,
  serialized_end=2127,
)


_LOGENTRY = _descriptor.Descriptor(
  name='LogEntry',
  full_name='panda.LogEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pc', full_name='panda.LogEntry.pc', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instr', full_name='panda.LogEntry.instr', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asid_info', full_name='panda.LogEntry.asid_info', index=2,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.LogEntry.asid', index=3,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.LogEntry.call_stack', index=4,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='basic_block', full_name='panda.LogEntry.basic_block', index=5,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='edge_coverage', full_name='panda.LogEntry.edge_coverage', index=6,
      number=41, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trace', full_name='panda.LogEntry.trace', index=7,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asid_libraries', full_name='panda.LogEntry.asid_libraries', index=8,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dwarf_call', full_name='panda.LogEntry.dwarf_call', index=9,
      number=66, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dwarf_ret', full_name='panda.LogEntry.dwarf_ret', index=10,
      number=67, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='signal_event', full_name='panda.LogEntry.signal_event', index=11,
      number=50, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query_pri', full_name='panda.LogEntry.taint_query_pri', index=12,
      number=68, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attack_point_pri', full_name='panda.LogEntry.attack_point_pri', index=13,
      number=69, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pri_trace_src_info', full_name='panda.LogEntry.pri_trace_src_info', index=14,
      number=70, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='serial_tx', full_name='panda.LogEntry.serial_tx', index=15,
      number=102, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query_hypercall', full_name='panda.LogEntry.taint_query_hypercall', index=16,
      number=38, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attack_point', full_name='panda.LogEntry.attack_point', index=17,
      number=39, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_label_virtual_addr', full_name='panda.LogEntry.taint_label_virtual_addr', index=18,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_label_physical_addr', full_name='panda.LogEntry.taint_label_physical_addr', index=19,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_label_number', full_name='panda.LogEntry.taint_label_number', index=20,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_branch', full_name='panda.LogEntry.tainted_branch', index=21,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_branch_summary', full_name='panda.LogEntry.tainted_branch_summary', index=22,
      number=72, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label_liveness', full_name='panda.LogEntry.label_liveness', index=23,
      number=45, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_instr', full_name='panda.LogEntry.tainted_instr', index=24,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_instr_summary', full_name='panda.LogEntry.tainted_instr_summary', index=25,
      number=56, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_mmio_label', full_name='panda.LogEntry.tainted_mmio_label', index=26,
      number=73, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2130,
  serialized_end=3215,
)

_ASIDEDGES.fields_by_name['edges'].message_type = _EDGE
_LOADEDLIBS.fields_by_name['modules'].message_type = _MODULE
_ATTACKPOINTPRI.fields_by_name['call_stack'].message_type = _CALLSTACK
_ATTACKPOINTPRI.fields_by_name['src_info'].message_type = _SRCINFOPRI
_TAINTQUERYPRI.fields_by_name['call_stack'].message_type = _CALLSTACK
_TAINTQUERYPRI.fields_by_name['src_info'].message_type = _SRCINFOPRI
_TAINTQUERYPRI.fields_by_name['taint_query'].message_type = _TAINTQUERY
_TAINTQUERY.fields_by_name['unique_label_set'].message_type = _TAINTQUERYUNIQUELABELSET
_ATTACKPOINT.fields_by_name['call_stack'].message_type = _CALLSTACK
_ATTACKPOINT.fields_by_name['src_info'].message_type = _SRCINFO
_TAINTQUERYHYPERCALL.fields_by_name['call_stack'].message_type = _CALLSTACK
_TAINTQUERYHYPERCALL.fields_by_name['src_info'].message_type = _SRCINFO
_TAINTQUERYHYPERCALL.fields_by_name['taint_query'].message_type = _TAINTQUERY
_TAINTEDBRANCH.fields_by_name['call_stack'].message_type = _CALLSTACK
_TAINTEDBRANCH.fields_by_name['taint_query'].message_type = _TAINTQUERY
_TAINTEDINSTR.fields_by_name['call_stack'].message_type = _CALLSTACK
_TAINTEDINSTR.fields_by_name['taint_query'].message_type = _TAINTQUERY
_LOGENTRY.fields_by_name['asid_info'].message_type = _ASIDINFO
_LOGENTRY.fields_by_name['call_stack'].message_type = _CALLSTACK
_LOGENTRY.fields_by_name['basic_block'].message_type = _BASICBLOCK
_LOGENTRY.fields_by_name['edge_coverage'].message_type = _ASIDEDGES
_LOGENTRY.fields_by_name['trace'].message_type = _ASIDTRACE
_LOGENTRY.fields_by_name['asid_libraries'].message_type = _LOADEDLIBS
_LOGENTRY.fields_by_name['dwarf_call'].message_type = _DWARFCALL
_LOGENTRY.fields_by_name['dwarf_ret'].message_type = _DWARFCALL
_LOGENTRY.fields_by_name['signal_event'].message_type = _SIGNALEVENT
_LOGENTRY.fields_by_name['taint_query_pri'].message_type = _TAINTQUERYPRI
_LOGENTRY.fields_by_name['attack_point_pri'].message_type = _ATTACKPOINTPRI
_LOGENTRY.fields_by_name['pri_trace_src_info'].message_type = _SRCINFOPRI
_LOGENTRY.fields_by_name['serial_tx'].message_type = _SERIALTX
_LOGENTRY.fields_by_name['taint_query_hypercall'].message_type = _TAINTQUERYHYPERCALL
_LOGENTRY.fields_by_name['attack_point'].message_type = _ATTACKPOINT
_LOGENTRY.fields_by_name['tainted_branch'].message_type = _TAINTEDBRANCH
_LOGENTRY.fields_by_name['tainted_branch_summary'].message_type = _TAINTEDBRANCHSUMMARY
_LOGENTRY.fields_by_name['label_liveness'].message_type = _LABELLIVENESS
_LOGENTRY.fields_by_name['tainted_instr'].message_type = _TAINTEDINSTR
_LOGENTRY.fields_by_name['tainted_instr_summary'].message_type = _TAINTEDINSTRSUMMARY
_LOGENTRY.fields_by_name['tainted_mmio_label'].message_type = _TAINTEDMMIOLABEL
DESCRIPTOR.message_types_by_name['AsidInfo'] = _ASIDINFO
DESCRIPTOR.message_types_by_name['CallStack'] = _CALLSTACK
DESCRIPTOR.message_types_by_name['BasicBlock'] = _BASICBLOCK
DESCRIPTOR.message_types_by_name['Edge'] = _EDGE
DESCRIPTOR.message_types_by_name['AsidEdges'] = _ASIDEDGES
DESCRIPTOR.message_types_by_name['AsidTrace'] = _ASIDTRACE
DESCRIPTOR.message_types_by_name['Module'] = _MODULE
DESCRIPTOR.message_types_by_name['LoadedLibs'] = _LOADEDLIBS
DESCRIPTOR.message_types_by_name['DwarfCall'] = _DWARFCALL
DESCRIPTOR.message_types_by_name['SignalEvent'] = _SIGNALEVENT
DESCRIPTOR.message_types_by_name['SrcInfoPri'] = _SRCINFOPRI
DESCRIPTOR.message_types_by_name['AttackPointPri'] = _ATTACKPOINTPRI
DESCRIPTOR.message_types_by_name['TaintQueryPri'] = _TAINTQUERYPRI
DESCRIPTOR.message_types_by_name['SerialTx'] = _SERIALTX
DESCRIPTOR.message_types_by_name['TaintQueryUniqueLabelSet'] = _TAINTQUERYUNIQUELABELSET
DESCRIPTOR.message_types_by_name['SrcInfo'] = _SRCINFO
DESCRIPTOR.message_types_by_name['TaintQuery'] = _TAINTQUERY
DESCRIPTOR.message_types_by_name['AttackPoint'] = _ATTACKPOINT
DESCRIPTOR.message_types_by_name['TaintQueryHypercall'] = _TAINTQUERYHYPERCALL
DESCRIPTOR.message_types_by_name['TaintedBranch'] = _TAINTEDBRANCH
DESCRIPTOR.message_types_by_name['TaintedBranchSummary'] = _TAINTEDBRANCHSUMMARY
DESCRIPTOR.message_types_by_name['LabelLiveness'] = _LABELLIVENESS
DESCRIPTOR.message_types_by_name['TaintedInstr'] = _TAINTEDINSTR
DESCRIPTOR.message_types_by_name['TaintedInstrSummary'] = _TAINTEDINSTRSUMMARY
DESCRIPTOR.message_types_by_name['TaintedMmioLabel'] = _TAINTEDMMIOLABEL
DESCRIPTOR.message_types_by_name['LogEntry'] = _LOGENTRY

AsidInfo = _reflection.GeneratedProtocolMessageType('AsidInfo', (_message.Message,), dict(
  DESCRIPTOR = _ASIDINFO,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.AsidInfo)
  ))
_sym_db.RegisterMessage(AsidInfo)

CallStack = _reflection.GeneratedProtocolMessageType('CallStack', (_message.Message,), dict(
  DESCRIPTOR = _CALLSTACK,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.CallStack)
  ))
_sym_db.RegisterMessage(CallStack)

BasicBlock = _reflection.GeneratedProtocolMessageType('BasicBlock', (_message.Message,), dict(
  DESCRIPTOR = _BASICBLOCK,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.BasicBlock)
  ))
_sym_db.RegisterMessage(BasicBlock)

Edge = _reflection.GeneratedProtocolMessageType('Edge', (_message.Message,), dict(
  DESCRIPTOR = _EDGE,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.Edge)
  ))
_sym_db.RegisterMessage(Edge)

AsidEdges = _reflection.GeneratedProtocolMessageType('AsidEdges', (_message.Message,), dict(
  DESCRIPTOR = _ASIDEDGES,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.AsidEdges)
  ))
_sym_db.RegisterMessage(AsidEdges)

AsidTrace = _reflection.GeneratedProtocolMessageType('AsidTrace', (_message.Message,), dict(
  DESCRIPTOR = _ASIDTRACE,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.AsidTrace)
  ))
_sym_db.RegisterMessage(AsidTrace)

Module = _reflection.GeneratedProtocolMessageType('Module', (_message.Message,), dict(
  DESCRIPTOR = _MODULE,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.Module)
  ))
_sym_db.RegisterMessage(Module)

LoadedLibs = _reflection.GeneratedProtocolMessageType('LoadedLibs', (_message.Message,), dict(
  DESCRIPTOR = _LOADEDLIBS,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.LoadedLibs)
  ))
_sym_db.RegisterMessage(LoadedLibs)

DwarfCall = _reflection.GeneratedProtocolMessageType('DwarfCall', (_message.Message,), dict(
  DESCRIPTOR = _DWARFCALL,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.DwarfCall)
  ))
_sym_db.RegisterMessage(DwarfCall)

SignalEvent = _reflection.GeneratedProtocolMessageType('SignalEvent', (_message.Message,), dict(
  DESCRIPTOR = _SIGNALEVENT,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.SignalEvent)
  ))
_sym_db.RegisterMessage(SignalEvent)

SrcInfoPri = _reflection.GeneratedProtocolMessageType('SrcInfoPri', (_message.Message,), dict(
  DESCRIPTOR = _SRCINFOPRI,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.SrcInfoPri)
  ))
_sym_db.RegisterMessage(SrcInfoPri)

AttackPointPri = _reflection.GeneratedProtocolMessageType('AttackPointPri', (_message.Message,), dict(
  DESCRIPTOR = _ATTACKPOINTPRI,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.AttackPointPri)
  ))
_sym_db.RegisterMessage(AttackPointPri)

TaintQueryPri = _reflection.GeneratedProtocolMessageType('TaintQueryPri', (_message.Message,), dict(
  DESCRIPTOR = _TAINTQUERYPRI,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintQueryPri)
  ))
_sym_db.RegisterMessage(TaintQueryPri)

SerialTx = _reflection.GeneratedProtocolMessageType('SerialTx', (_message.Message,), dict(
  DESCRIPTOR = _SERIALTX,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.SerialTx)
  ))
_sym_db.RegisterMessage(SerialTx)

TaintQueryUniqueLabelSet = _reflection.GeneratedProtocolMessageType('TaintQueryUniqueLabelSet', (_message.Message,), dict(
  DESCRIPTOR = _TAINTQUERYUNIQUELABELSET,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintQueryUniqueLabelSet)
  ))
_sym_db.RegisterMessage(TaintQueryUniqueLabelSet)

SrcInfo = _reflection.GeneratedProtocolMessageType('SrcInfo', (_message.Message,), dict(
  DESCRIPTOR = _SRCINFO,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.SrcInfo)
  ))
_sym_db.RegisterMessage(SrcInfo)

TaintQuery = _reflection.GeneratedProtocolMessageType('TaintQuery', (_message.Message,), dict(
  DESCRIPTOR = _TAINTQUERY,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintQuery)
  ))
_sym_db.RegisterMessage(TaintQuery)

AttackPoint = _reflection.GeneratedProtocolMessageType('AttackPoint', (_message.Message,), dict(
  DESCRIPTOR = _ATTACKPOINT,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.AttackPoint)
  ))
_sym_db.RegisterMessage(AttackPoint)

TaintQueryHypercall = _reflection.GeneratedProtocolMessageType('TaintQueryHypercall', (_message.Message,), dict(
  DESCRIPTOR = _TAINTQUERYHYPERCALL,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintQueryHypercall)
  ))
_sym_db.RegisterMessage(TaintQueryHypercall)

TaintedBranch = _reflection.GeneratedProtocolMessageType('TaintedBranch', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDBRANCH,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedBranch)
  ))
_sym_db.RegisterMessage(TaintedBranch)

TaintedBranchSummary = _reflection.GeneratedProtocolMessageType('TaintedBranchSummary', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDBRANCHSUMMARY,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedBranchSummary)
  ))
_sym_db.RegisterMessage(TaintedBranchSummary)

LabelLiveness = _reflection.GeneratedProtocolMessageType('LabelLiveness', (_message.Message,), dict(
  DESCRIPTOR = _LABELLIVENESS,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.LabelLiveness)
  ))
_sym_db.RegisterMessage(LabelLiveness)

TaintedInstr = _reflection.GeneratedProtocolMessageType('TaintedInstr', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDINSTR,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedInstr)
  ))
_sym_db.RegisterMessage(TaintedInstr)

TaintedInstrSummary = _reflection.GeneratedProtocolMessageType('TaintedInstrSummary', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDINSTRSUMMARY,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedInstrSummary)
  ))
_sym_db.RegisterMessage(TaintedInstrSummary)

TaintedMmioLabel = _reflection.GeneratedProtocolMessageType('TaintedMmioLabel', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDMMIOLABEL,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedMmioLabel)
  ))
_sym_db.RegisterMessage(TaintedMmioLabel)

LogEntry = _reflection.GeneratedProtocolMessageType('LogEntry', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRY,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.LogEntry)
  ))
_sym_db.RegisterMessage(LogEntry)


# @@protoc_insertion_point(module_scope)
