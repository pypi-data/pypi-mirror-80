# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'UserFederationKerberos',
]

@pulumi.output_type
class UserFederationKerberos(dict):
    def __init__(__self__, *,
                 kerberos_realm: str,
                 key_tab: str,
                 server_principal: str,
                 use_kerberos_for_password_authentication: Optional[bool] = None):
        pulumi.set(__self__, "kerberos_realm", kerberos_realm)
        pulumi.set(__self__, "key_tab", key_tab)
        pulumi.set(__self__, "server_principal", server_principal)
        if use_kerberos_for_password_authentication is not None:
            pulumi.set(__self__, "use_kerberos_for_password_authentication", use_kerberos_for_password_authentication)

    @property
    @pulumi.getter(name="kerberosRealm")
    def kerberos_realm(self) -> str:
        return pulumi.get(self, "kerberos_realm")

    @property
    @pulumi.getter(name="keyTab")
    def key_tab(self) -> str:
        return pulumi.get(self, "key_tab")

    @property
    @pulumi.getter(name="serverPrincipal")
    def server_principal(self) -> str:
        return pulumi.get(self, "server_principal")

    @property
    @pulumi.getter(name="useKerberosForPasswordAuthentication")
    def use_kerberos_for_password_authentication(self) -> Optional[bool]:
        return pulumi.get(self, "use_kerberos_for_password_authentication")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


