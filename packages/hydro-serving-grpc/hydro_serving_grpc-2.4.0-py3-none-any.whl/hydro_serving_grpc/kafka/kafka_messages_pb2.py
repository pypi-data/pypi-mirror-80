# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hydro_serving_grpc/kafka/kafka_messages.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from hydro_serving_grpc.tf.api import predict_pb2 as hydro__serving__grpc_dot_tf_dot_api_dot_predict__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='hydro_serving_grpc/kafka/kafka_messages.proto',
  package='hydrosphere.manager',
  syntax='proto3',
  serialized_pb=_b('\n-hydro_serving_grpc/kafka/kafka_messages.proto\x12\x13hydrosphere.manager\x1a\'hydro_serving_grpc/tf/api/predict.proto\"o\n\nKafkaError\x12\x15\n\rerror_message\x18\x05 \x01(\t\x12J\n\x12last_known_request\x18\x08 \x01(\x0b\x32..hydrosphere.tensorflow.serving.PredictRequest\"d\n\x14KafkaMessageLocation\x12\x14\n\x0csource_topic\x18\x01 \x01(\t\x12\x13\n\x0b\x63onsumer_id\x18\x02 \x01(\t\x12\x0e\n\x06offset\x18\x03 \x01(\x03\x12\x11\n\tpartition\x18\x04 \x01(\x05\"\x9f\x01\n\x10KafkaMessageMeta\x12\x10\n\x08trace_id\x18\x01 \x01(\t\x12\x16\n\x0e\x61pplication_id\x18\x02 \x01(\t\x12\x10\n\x08stage_id\x18\x03 \x01(\t\x12\x12\n\nstage_name\x18\x04 \x01(\t\x12;\n\x08location\x18\x05 \x01(\x0b\x32).hydrosphere.manager.KafkaMessageLocation\"\xd3\x01\n\x13KafkaServingMessage\x12\x30\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x1f.hydrosphere.manager.KafkaErrorH\x00\x12\x41\n\x07request\x18\x02 \x01(\x0b\x32..hydrosphere.tensorflow.serving.PredictRequestH\x00\x12\x33\n\x04meta\x18\x03 \x01(\x0b\x32%.hydrosphere.manager.KafkaMessageMetaB\x12\n\x10request_or_errorB\x1e\n\x1cio.hydrosphere.serving.kafkab\x06proto3')
  ,
  dependencies=[hydro__serving__grpc_dot_tf_dot_api_dot_predict__pb2.DESCRIPTOR,])




_KAFKAERROR = _descriptor.Descriptor(
  name='KafkaError',
  full_name='hydrosphere.manager.KafkaError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_message', full_name='hydrosphere.manager.KafkaError.error_message', index=0,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_known_request', full_name='hydrosphere.manager.KafkaError.last_known_request', index=1,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=222,
)


_KAFKAMESSAGELOCATION = _descriptor.Descriptor(
  name='KafkaMessageLocation',
  full_name='hydrosphere.manager.KafkaMessageLocation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_topic', full_name='hydrosphere.manager.KafkaMessageLocation.source_topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumer_id', full_name='hydrosphere.manager.KafkaMessageLocation.consumer_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='hydrosphere.manager.KafkaMessageLocation.offset', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='hydrosphere.manager.KafkaMessageLocation.partition', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=224,
  serialized_end=324,
)


_KAFKAMESSAGEMETA = _descriptor.Descriptor(
  name='KafkaMessageMeta',
  full_name='hydrosphere.manager.KafkaMessageMeta',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='trace_id', full_name='hydrosphere.manager.KafkaMessageMeta.trace_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='application_id', full_name='hydrosphere.manager.KafkaMessageMeta.application_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stage_id', full_name='hydrosphere.manager.KafkaMessageMeta.stage_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stage_name', full_name='hydrosphere.manager.KafkaMessageMeta.stage_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='hydrosphere.manager.KafkaMessageMeta.location', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=327,
  serialized_end=486,
)


_KAFKASERVINGMESSAGE = _descriptor.Descriptor(
  name='KafkaServingMessage',
  full_name='hydrosphere.manager.KafkaServingMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='error', full_name='hydrosphere.manager.KafkaServingMessage.error', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='request', full_name='hydrosphere.manager.KafkaServingMessage.request', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='meta', full_name='hydrosphere.manager.KafkaServingMessage.meta', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='request_or_error', full_name='hydrosphere.manager.KafkaServingMessage.request_or_error',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=489,
  serialized_end=700,
)

_KAFKAERROR.fields_by_name['last_known_request'].message_type = hydro__serving__grpc_dot_tf_dot_api_dot_predict__pb2._PREDICTREQUEST
_KAFKAMESSAGEMETA.fields_by_name['location'].message_type = _KAFKAMESSAGELOCATION
_KAFKASERVINGMESSAGE.fields_by_name['error'].message_type = _KAFKAERROR
_KAFKASERVINGMESSAGE.fields_by_name['request'].message_type = hydro__serving__grpc_dot_tf_dot_api_dot_predict__pb2._PREDICTREQUEST
_KAFKASERVINGMESSAGE.fields_by_name['meta'].message_type = _KAFKAMESSAGEMETA
_KAFKASERVINGMESSAGE.oneofs_by_name['request_or_error'].fields.append(
  _KAFKASERVINGMESSAGE.fields_by_name['error'])
_KAFKASERVINGMESSAGE.fields_by_name['error'].containing_oneof = _KAFKASERVINGMESSAGE.oneofs_by_name['request_or_error']
_KAFKASERVINGMESSAGE.oneofs_by_name['request_or_error'].fields.append(
  _KAFKASERVINGMESSAGE.fields_by_name['request'])
_KAFKASERVINGMESSAGE.fields_by_name['request'].containing_oneof = _KAFKASERVINGMESSAGE.oneofs_by_name['request_or_error']
DESCRIPTOR.message_types_by_name['KafkaError'] = _KAFKAERROR
DESCRIPTOR.message_types_by_name['KafkaMessageLocation'] = _KAFKAMESSAGELOCATION
DESCRIPTOR.message_types_by_name['KafkaMessageMeta'] = _KAFKAMESSAGEMETA
DESCRIPTOR.message_types_by_name['KafkaServingMessage'] = _KAFKASERVINGMESSAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

KafkaError = _reflection.GeneratedProtocolMessageType('KafkaError', (_message.Message,), dict(
  DESCRIPTOR = _KAFKAERROR,
  __module__ = 'hydro_serving_grpc.kafka.kafka_messages_pb2'
  # @@protoc_insertion_point(class_scope:hydrosphere.manager.KafkaError)
  ))
_sym_db.RegisterMessage(KafkaError)

KafkaMessageLocation = _reflection.GeneratedProtocolMessageType('KafkaMessageLocation', (_message.Message,), dict(
  DESCRIPTOR = _KAFKAMESSAGELOCATION,
  __module__ = 'hydro_serving_grpc.kafka.kafka_messages_pb2'
  # @@protoc_insertion_point(class_scope:hydrosphere.manager.KafkaMessageLocation)
  ))
_sym_db.RegisterMessage(KafkaMessageLocation)

KafkaMessageMeta = _reflection.GeneratedProtocolMessageType('KafkaMessageMeta', (_message.Message,), dict(
  DESCRIPTOR = _KAFKAMESSAGEMETA,
  __module__ = 'hydro_serving_grpc.kafka.kafka_messages_pb2'
  # @@protoc_insertion_point(class_scope:hydrosphere.manager.KafkaMessageMeta)
  ))
_sym_db.RegisterMessage(KafkaMessageMeta)

KafkaServingMessage = _reflection.GeneratedProtocolMessageType('KafkaServingMessage', (_message.Message,), dict(
  DESCRIPTOR = _KAFKASERVINGMESSAGE,
  __module__ = 'hydro_serving_grpc.kafka.kafka_messages_pb2'
  # @@protoc_insertion_point(class_scope:hydrosphere.manager.KafkaServingMessage)
  ))
_sym_db.RegisterMessage(KafkaServingMessage)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\034io.hydrosphere.serving.kafka'))
# @@protoc_insertion_point(module_scope)
