# Generated by Django 3.0.2 on 2020-01-21 12:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arp',
            fields=[
                ('mac', models.CharField(max_length=12, primary_key=True, serialize=False, unique=True)),
                ('ip', models.GenericIPAddressField()),
            ],
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField()),
                ('interface', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50, verbose_name='Interface type')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='User defined description for the interface')),
                ('status', models.IntegerField(null=True)),
                ('admin_status', models.IntegerField(null=True)),
                ('speed', models.BigIntegerField(blank=True, null=True)),
                ('poe_status', models.CharField(blank=True, max_length=50, null=True)),
                ('link_status_changed', models.DateField(blank=True, null=True)),
                ('neighbor_string', models.CharField(blank=True, max_length=500, null=True)),
                ('skip_mac', models.BooleanField(default=False, help_text='Do not load MAC-addresses for this interface')),
                ('force_mac', models.BooleanField(default=False, help_text='Load MAC addresses even if the interface is trunk')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Oui',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(max_length=6)),
                ('vendor', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Switch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('ip', models.GenericIPAddressField()),
                ('has_poe', models.BooleanField(default=False)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('community', models.CharField(default='Public', max_length=50)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('series', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vlan', models.IntegerField(unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('has_ports', models.BooleanField(default=False)),
                ('on_switch', models.ManyToManyField(to='switchinfo.Switch')),
            ],
            options={
                'ordering': ['vlan'],
            },
        ),
        migrations.CreateModel(
            name='Mac',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac', models.CharField(max_length=12)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='switchinfo.Interface')),
            ],
        ),
        migrations.AddField(
            model_name='interface',
            name='neighbor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='neighbor', to='switchinfo.Switch'),
        ),
        migrations.AddField(
            model_name='interface',
            name='neighbor_set_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='neighbor_set_by', to='switchinfo.Switch'),
        ),
        migrations.AddField(
            model_name='interface',
            name='switch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='switch', to='switchinfo.Switch'),
        ),
        migrations.AddField(
            model_name='interface',
            name='tagged_vlans',
            field=models.ManyToManyField(blank=True, related_name='tagged_vlans', to='switchinfo.Vlan'),
        ),
        migrations.AddField(
            model_name='interface',
            name='vlan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='untagged_vlan', to='switchinfo.Vlan'),
        ),
        migrations.AlterUniqueTogether(
            name='interface',
            unique_together={('switch', 'index')},
        ),
    ]
