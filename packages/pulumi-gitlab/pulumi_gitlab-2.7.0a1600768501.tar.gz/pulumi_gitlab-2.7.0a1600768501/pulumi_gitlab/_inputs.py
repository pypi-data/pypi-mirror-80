# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from . import _utilities, _tables

__all__ = [
    'ProjectSharedWithGroupArgs',
]

@pulumi.input_type
class ProjectSharedWithGroupArgs:
    def __init__(__self__, *,
                 group_access_level: pulumi.Input[str],
                 group_id: pulumi.Input[float],
                 group_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] group_access_level: Group's sharing permissions. See [group members permission][group_members_permissions] for more info.
               Valid values are `guest`, `reporter`, `developer`, `master`.
        :param pulumi.Input[float] group_id: Group id of the group you want to share the project with.
        :param pulumi.Input[str] group_name: Group's name.
        """
        pulumi.set(__self__, "group_access_level", group_access_level)
        pulumi.set(__self__, "group_id", group_id)
        if group_name is not None:
            pulumi.set(__self__, "group_name", group_name)

    @property
    @pulumi.getter(name="groupAccessLevel")
    def group_access_level(self) -> pulumi.Input[str]:
        """
        Group's sharing permissions. See [group members permission][group_members_permissions] for more info.
        Valid values are `guest`, `reporter`, `developer`, `master`.
        """
        return pulumi.get(self, "group_access_level")

    @group_access_level.setter
    def group_access_level(self, value: pulumi.Input[str]):
        pulumi.set(self, "group_access_level", value)

    @property
    @pulumi.getter(name="groupId")
    def group_id(self) -> pulumi.Input[float]:
        """
        Group id of the group you want to share the project with.
        """
        return pulumi.get(self, "group_id")

    @group_id.setter
    def group_id(self, value: pulumi.Input[float]):
        pulumi.set(self, "group_id", value)

    @property
    @pulumi.getter(name="groupName")
    def group_name(self) -> Optional[pulumi.Input[str]]:
        """
        Group's name.
        """
        return pulumi.get(self, "group_name")

    @group_name.setter
    def group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_name", value)


