[tox]
minversion = 3.2.0
skipsdist = True
envlist =
    clean
    py38
    flake8
    docs
    lint
    pkg
ignore_basepython_conflict=true

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:py38]
basepython = python3
usedevelop = True
deps =
    pipenv
;    -r{toxinidir}/requirements_dev.txt
;    -r{toxinidir}/requirements.txt
;    pytest
;    pytest-cov
; If you want to make tox run the tests with the same versions, create a
; requirements.txt with the pinned versions and uncomment the following line:
;     -r{toxinidir}/requirements.txt
whitelist_externals = python3
commands =
;    pipenv install --skip-lock
    pipenv run pytest --cov=personroles --cov-report=term-missing
;    python -m pip check
;    pytest --color=yes --cov=src --cov-report=term-missing -ra -s
;    pytest --cov --cov-append --cov-report=term-missing
;    python -m pytest {posargs}
setenv =
    PYTHONPATH = {toxinidir}
;    PIPENV_IGNORE_VIRTUALENVS=1
    PIP_LOG={envdir}/pip.log
    PIP_DISABLE_PIP_VERSION_CHECK=1
    # Avoid 2020-01-01 warnings: https://github.com/pypa/pip/issues/6207
    PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command
passenv =
    CI
    COVERAGE*
    CODECOV_*
    TRAVIS*
    TWINE_*

[testenv:flake8]
basepython = python3
deps = flake8
commands = flake8 personroles tests

[travis]
python =
    3.8: py38

[testenv:pkg]
deps =
;    collective.checkdocs>=0.2
;    pep517>=0.7.0
;    pip>=19.2.3
;    setuptools>=41.4
    twine>=2.0.0
    wheel>=0.33.6
;    /usr/bin/rm
    check-manifest>=0.42
commands =
    rm -rf {toxinidir}/dist build */*.egg-info *.egg-info
    python setup.py check -m -s
    # disabled due to errors with older setuptools:
    python setup.py sdist bdist_wheel
    check-manifest
;    python -m pep517.build \
;      --source \
;      --binary \
;      --out-dir {toxinidir}/dist/ \
;      {toxinidir}
;    check-manifest
    python -m twine check {toxinidir}/dist/*
