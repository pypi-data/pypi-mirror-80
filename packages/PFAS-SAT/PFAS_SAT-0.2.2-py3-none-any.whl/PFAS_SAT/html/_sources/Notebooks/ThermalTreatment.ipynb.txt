{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Thermal Treatment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import PFAS_SAT as ps\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from IPython.display import Image\n",
    "import pandas as pd\n",
    "pd.set_option('display.max_colwidth', 0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model document\n",
    "\n",
    "Combustion systems include mass burn incinerators for MSW, hazardous solid waste, and medical waste, as well as cement kilns. The combustion process model in the SAT framework was designed so that by changing default parameters, a variety of conventional and emerging thermal treatment processes can be represented. In addition to MSW incinerators, other potential thermal processes include gasification/pyrolysis systems, and thermomechanochemical systems, which may include mechanical and chemical processing prior to combustion. \n",
    "To begin, the incoming materials are partially or fully combusted. During combustion, a fraction of the PFAS may be volatilized and/or destroyed, but data on destruction and release of volatilized PFAS and/or products of incomplete combustion are limited. The volatilized compounds may be transformed into chlorofluorocarbons, which deplete stratospheric ozone and are potent greenhouse gases. The incineration process produces combustion residuals that may include bottom ash, fly ash, and air pollution control (APC) residues. The mass of PFAS flows are modeled using a destruction and removal efficiency (DRE), and fraction of the DRE that remains in the residual. Based on these inputs, the model calculates the PFAS destroyed, released to the air and remaining in the ash. The ash is then sent to landfill.\n",
    "\n",
    "<img src=\"../Images/ProcessModels/ThemalTreatment.png\" alt=\"Drawing\" style=\"width: 500px;\"/>\n",
    "\n",
    "\n",
    "### Assumptions and Limitations\n",
    "1.\tThe model assumes a single DRE and fraction remaining on the residual for each material and type of PFAS. Data is relatively limited, but this can be readily updated as more data becomes available.\n",
    "2.\tThe model assumes there is a single ash stream with a common set of parameters.\n",
    "3.\tThe model assumes a single VS destruction efficiency, but this could vary by material.\n",
    "4.\tThe model does not consider transformations of PFAS."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Input Parameters for Thermal Treatment model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Category</th>\n",
       "      <th>Parameter Name</th>\n",
       "      <th>Parameter Description</th>\n",
       "      <th>amount</th>\n",
       "      <th>unit</th>\n",
       "      <th>Reference</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFOA</td>\n",
       "      <td>DRE of PFOA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFOS</td>\n",
       "      <td>DRE of PFOS</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFBA</td>\n",
       "      <td>DRE of PFBA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFPeA</td>\n",
       "      <td>DRE of PFPeA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFHxA</td>\n",
       "      <td>DRE of PFHxA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFHpA</td>\n",
       "      <td>DRE of PFHpA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFNA</td>\n",
       "      <td>DRE of PFNA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFDA</td>\n",
       "      <td>DRE of PFDA</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFBS</td>\n",
       "      <td>DRE of PFBS</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Total destruction and removal efficiency</td>\n",
       "      <td>PFHxS</td>\n",
       "      <td>DRE of PFHxS</td>\n",
       "      <td>0.97</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFOA</td>\n",
       "      <td>Fraction of PFOA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFOS</td>\n",
       "      <td>Fraction of PFOS remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFBA</td>\n",
       "      <td>Fraction of PFBA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFPeA</td>\n",
       "      <td>Fraction of PFPeA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFHxA</td>\n",
       "      <td>Fraction of PFHxA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFHpA</td>\n",
       "      <td>Fraction of PFHpA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFNA</td>\n",
       "      <td>Fraction of PFNA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFDA</td>\n",
       "      <td>Fraction of PFDA remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFBS</td>\n",
       "      <td>Fraction of PFBS remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Fraction of not destroyed and removed that remains in residuals</td>\n",
       "      <td>PFHxS</td>\n",
       "      <td>Fraction of PFHxS remained in residuals</td>\n",
       "      <td>0.33</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Combustion parameters</td>\n",
       "      <td>frac_vs_to_res</td>\n",
       "      <td>Fraction of incoming Volatile Solids to Combustion Residuals</td>\n",
       "      <td>0.05</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Combustion parameters</td>\n",
       "      <td>res_ts_cont</td>\n",
       "      <td>Solids content of residuals</td>\n",
       "      <td>0.85</td>\n",
       "      <td>fraction</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                           Category  \\\n",
       "0   Total destruction and removal efficiency                          \n",
       "1   Total destruction and removal efficiency                          \n",
       "2   Total destruction and removal efficiency                          \n",
       "3   Total destruction and removal efficiency                          \n",
       "4   Total destruction and removal efficiency                          \n",
       "5   Total destruction and removal efficiency                          \n",
       "6   Total destruction and removal efficiency                          \n",
       "7   Total destruction and removal efficiency                          \n",
       "8   Total destruction and removal efficiency                          \n",
       "9   Total destruction and removal efficiency                          \n",
       "10  Fraction of not destroyed and removed that remains in residuals   \n",
       "11  Fraction of not destroyed and removed that remains in residuals   \n",
       "12  Fraction of not destroyed and removed that remains in residuals   \n",
       "13  Fraction of not destroyed and removed that remains in residuals   \n",
       "14  Fraction of not destroyed and removed that remains in residuals   \n",
       "15  Fraction of not destroyed and removed that remains in residuals   \n",
       "16  Fraction of not destroyed and removed that remains in residuals   \n",
       "17  Fraction of not destroyed and removed that remains in residuals   \n",
       "18  Fraction of not destroyed and removed that remains in residuals   \n",
       "19  Fraction of not destroyed and removed that remains in residuals   \n",
       "20  Combustion parameters                                             \n",
       "21  Combustion parameters                                             \n",
       "\n",
       "    Parameter Name  \\\n",
       "0   PFOA             \n",
       "1   PFOS             \n",
       "2   PFBA             \n",
       "3   PFPeA            \n",
       "4   PFHxA            \n",
       "5   PFHpA            \n",
       "6   PFNA             \n",
       "7   PFDA             \n",
       "8   PFBS             \n",
       "9   PFHxS            \n",
       "10  PFOA             \n",
       "11  PFOS             \n",
       "12  PFBA             \n",
       "13  PFPeA            \n",
       "14  PFHxA            \n",
       "15  PFHpA            \n",
       "16  PFNA             \n",
       "17  PFDA             \n",
       "18  PFBS             \n",
       "19  PFHxS            \n",
       "20  frac_vs_to_res   \n",
       "21  res_ts_cont      \n",
       "\n",
       "                                           Parameter Description  amount  \\\n",
       "0   DRE of PFOA                                                   0.97     \n",
       "1   DRE of PFOS                                                   0.97     \n",
       "2   DRE of PFBA                                                   0.97     \n",
       "3   DRE of PFPeA                                                  0.97     \n",
       "4   DRE of PFHxA                                                  0.97     \n",
       "5   DRE of PFHpA                                                  0.97     \n",
       "6   DRE of PFNA                                                   0.97     \n",
       "7   DRE of PFDA                                                   0.97     \n",
       "8   DRE of PFBS                                                   0.97     \n",
       "9   DRE of PFHxS                                                  0.97     \n",
       "10  Fraction of PFOA remained in residuals                        0.33     \n",
       "11  Fraction of PFOS remained in residuals                        0.33     \n",
       "12  Fraction of PFBA remained in residuals                        0.33     \n",
       "13  Fraction of PFPeA remained in residuals                       0.33     \n",
       "14  Fraction of PFHxA remained in residuals                       0.33     \n",
       "15  Fraction of PFHpA remained in residuals                       0.33     \n",
       "16  Fraction of PFNA remained in residuals                        0.33     \n",
       "17  Fraction of PFDA remained in residuals                        0.33     \n",
       "18  Fraction of PFBS remained in residuals                        0.33     \n",
       "19  Fraction of PFHxS remained in residuals                       0.33     \n",
       "20  Fraction of incoming Volatile Solids to Combustion Residuals  0.05     \n",
       "21  Solids content of residuals                                   0.85     \n",
       "\n",
       "        unit  Reference  \n",
       "0   fraction NaN         \n",
       "1   fraction NaN         \n",
       "2   fraction NaN         \n",
       "3   fraction NaN         \n",
       "4   fraction NaN         \n",
       "5   fraction NaN         \n",
       "6   fraction NaN         \n",
       "7   fraction NaN         \n",
       "8   fraction NaN         \n",
       "9   fraction NaN         \n",
       "10  fraction NaN         \n",
       "11  fraction NaN         \n",
       "12  fraction NaN         \n",
       "13  fraction NaN         \n",
       "14  fraction NaN         \n",
       "15  fraction NaN         \n",
       "16  fraction NaN         \n",
       "17  fraction NaN         \n",
       "18  fraction NaN         \n",
       "19  fraction NaN         \n",
       "20  fraction NaN         \n",
       "21  fraction NaN         "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ThermalTreatment = ps.ThermalTreatment()\n",
    "ThermalTreatment.InputData.Data[['Category','Parameter Name', 'Parameter Description', 'amount', 'unit','Reference']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Incoming MSW to Thermal Treatment "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Parameter</th>\n",
       "      <th>Unit</th>\n",
       "      <th>Amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Mass flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>1000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Solids flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Moisture flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>VS flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>134.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Carbon flow</td>\n",
       "      <td>kg</td>\n",
       "      <td>84.074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>PFOA</td>\n",
       "      <td>μg</td>\n",
       "      <td>1070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>PFOS</td>\n",
       "      <td>μg</td>\n",
       "      <td>840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>PFBA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>PFPeA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>PFHxA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>PFHpA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>PFNA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>PFDA</td>\n",
       "      <td>μg</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>PFBS</td>\n",
       "      <td>μg</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>PFHxS</td>\n",
       "      <td>μg</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Parameter Unit  Amount\n",
       "0   Mass flow      kg   1000  \n",
       "1   Solids flow    kg   254   \n",
       "2   Moisture flow  kg   746   \n",
       "3   VS flow        kg   134.62\n",
       "4   Carbon flow    kg   84.074\n",
       "5   PFOA           μg   1070  \n",
       "6   PFOS           μg   840   \n",
       "7   PFBA           μg   0     \n",
       "8   PFPeA          μg   0     \n",
       "9   PFHxA          μg   0     \n",
       "10  PFHpA          μg   0     \n",
       "11  PFNA           μg   0     \n",
       "12  PFDA           μg   0     \n",
       "13  PFBS           μg   0     \n",
       "14  PFHxS          μg   0     "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IncominWaste = ps.IncomFlow()\n",
    "IncominWaste.set_flow('MSW', 1000)\n",
    "IncominWaste.calc()\n",
    "MSW = IncominWaste.Inc_flow\n",
    "MSW.report()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PFAS balance in Thermal Treatment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Air Emission</th>\n",
       "      <th>Combustion Residuals</th>\n",
       "      <th>Destructed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PFOA</th>\n",
       "      <td>2.01</td>\n",
       "      <td>0.99</td>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFOS</th>\n",
       "      <td>2.01</td>\n",
       "      <td>0.99</td>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFBA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFPeA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHxA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHpA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFNA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFDA</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFBS</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PFHxS</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Air Emission  Combustion Residuals  Destructed\n",
       "PFOA   2.01          0.99                  97.0      \n",
       "PFOS   2.01          0.99                  97.0      \n",
       "PFBA  NaN           NaN                   NaN        \n",
       "PFPeA NaN           NaN                   NaN        \n",
       "PFHxA NaN           NaN                   NaN        \n",
       "PFHpA NaN           NaN                   NaN        \n",
       "PFNA  NaN           NaN                   NaN        \n",
       "PFDA  NaN           NaN                   NaN        \n",
       "PFBS  NaN           NaN                   NaN        \n",
       "PFHxS NaN           NaN                   NaN        "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ThermalTreatment.calc(Inc_flow=MSW)\n",
    "ThermalTreatment.report(normalized=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ThermalTreatment.plot_sankey()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ThermalTreatment.plot_sankey_report(margin=.5, gap=.3)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
