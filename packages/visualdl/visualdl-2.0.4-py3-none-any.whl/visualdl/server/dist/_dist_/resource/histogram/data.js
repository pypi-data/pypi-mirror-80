import{Modes as d}from"./types.js";function x(f,a,r,p=30){a===r&&(r=a*1.1+1,a=a/1.1-1);const m=(r-a)/p,c=[];for(let e=a;e<r;e+=m)c.push(e);let t=0;return c.map(e=>{const i=e+m;let n=0;for(;t<f.length;){const o=Math.min(r,f[t].right),s=Math.max(a,f[t].left),h=Math.min(o,i)-Math.max(s,e),u=h/(o-s)*f[t].count;if(h>0&&(n+=u),o>i)break;t++}return{x:e,dx:m,y:n}})}export function transform({data:f,mode:a}){const r=f.map(([t,e,i])=>({time:t,step:e,min:Math.min(...i.map(n=>n[0])),max:Math.max(...i.map(n=>n[1])),items:i.map(([n,o,s])=>({left:n,right:o,count:s}))})),p=Math.min(...r.map(({min:t})=>t)),m=Math.max(...r.map(({max:t})=>t)),c=r.map(({time:t,step:e,items:i})=>x(i,p,m).map(({x:n,dx:o,y:s})=>[t,e,n+o/2,Math.floor(s)]));if(a===d.Overlay)return{min:p,max:m,data:c};if(a===d.Offset){let t=Infinity,e=-Infinity,i=Infinity,n=-Infinity;const o=c.map(s=>{const h=s[0][1];return h>e&&(e=h),h<t&&(t=h),s.reduce((u,[,,g,l])=>(l>n&&(n=l),l<i&&(i=l),[...u,g,h,l]),[])});return{minX:p,maxX:m,minZ:i,maxZ:n,minStep:t,maxStep:e,data:o}}return}
