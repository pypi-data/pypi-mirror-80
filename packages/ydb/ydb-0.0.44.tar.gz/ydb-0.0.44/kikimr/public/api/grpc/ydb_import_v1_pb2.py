# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kikimr/public/api/grpc/ydb_import_v1.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from kikimr.public.api.protos import ydb_import_pb2 as kikimr_dot_public_dot_api_dot_protos_dot_ydb__import__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='kikimr/public/api/grpc/ydb_import_v1.proto',
  package='Ydb.Import.V1',
  syntax='proto3',
  serialized_options=_b('\n\031com.yandex.ydb.import_.v1'),
  serialized_pb=_b('\n*kikimr/public/api/grpc/ydb_import_v1.proto\x12\rYdb.Import.V1\x1a)kikimr/public/api/protos/ydb_import.proto2b\n\rImportService\x12Q\n\x0cImportFromS3\x12\x1f.Ydb.Import.ImportFromS3Request\x1a .Ydb.Import.ImportFromS3ResponseB\x1b\n\x19\x63om.yandex.ydb.import_.v1b\x06proto3')
  ,
  dependencies=[kikimr_dot_public_dot_api_dot_protos_dot_ydb__import__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None

_IMPORTSERVICE = _descriptor.ServiceDescriptor(
  name='ImportService',
  full_name='Ydb.Import.V1.ImportService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=104,
  serialized_end=202,
  methods=[
  _descriptor.MethodDescriptor(
    name='ImportFromS3',
    full_name='Ydb.Import.V1.ImportService.ImportFromS3',
    index=0,
    containing_service=None,
    input_type=kikimr_dot_public_dot_api_dot_protos_dot_ydb__import__pb2._IMPORTFROMS3REQUEST,
    output_type=kikimr_dot_public_dot_api_dot_protos_dot_ydb__import__pb2._IMPORTFROMS3RESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_IMPORTSERVICE)

DESCRIPTOR.services_by_name['ImportService'] = _IMPORTSERVICE

# @@protoc_insertion_point(module_scope)
